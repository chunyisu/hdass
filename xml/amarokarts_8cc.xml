<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.3.6">
  <compounddef id="amarokarts_8cc" kind="file">
    <compoundname>amarokarts.cc</compoundname>
    <includes refid="amarokarts_8h" local="yes">amarokarts.h</includes>
    <incdepgraph>
      <node id="2451">
        <label>amarokarts.h</label>
        <link refid="amarokarts_8h"/>
        <childnode refid="2452" relation="include">
        </childnode>
        <childnode refid="2453" relation="include">
        </childnode>
        <childnode refid="2454" relation="include">
        </childnode>
      </node>
      <node id="2452">
        <label>arts/common.h</label>
      </node>
      <node id="2453">
        <label>arts/artsflow.h</label>
      </node>
      <node id="2450">
        <label>amarokarts.cc</label>
        <link refid="amarokarts.cc"/>
        <childnode refid="2451" relation="include">
        </childnode>
      </node>
      <node id="2454">
        <label>arts/reference.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="amarokarts_8cc_1a0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dispatch_Amarok_Synth_STEREO_XFADE_00</definition>
        <argsstring>(void *object, Arts::Buffer *, Arts::Buffer *result)</argsstring>
        <name>_dispatch_Amarok_Synth_STEREO_XFADE_00</name>
        <param>
          <type>void *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>Arts::Buffer *</type>
        </param>
        <param>
          <type>Arts::Buffer *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/kde_application/hdass08/src/amarokarts.cc" line="140" bodystart="139" bodyend="142"/>
        <referencedby refid="classAmarok_1_1Synth__STEREO__XFADE__skel_1Amarok_1_1Synth__STEREO__XFADE__skela3" compoundref="amarokarts_8cc" startline="151" endline="164">Amarok::Synth_STEREO_XFADE_skel::_buildMethodTable</referencedby>
      </memberdef>
      <memberdef kind="function" id="amarokarts_8cc_1a1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dispatch_Amarok_Synth_STEREO_XFADE_01</definition>
        <argsstring>(void *object, Arts::Buffer *request, Arts::Buffer *)</argsstring>
        <name>_dispatch_Amarok_Synth_STEREO_XFADE_01</name>
        <param>
          <type>void *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>Arts::Buffer *</type>
          <declname>request</declname>
        </param>
        <param>
          <type>Arts::Buffer *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/kde_application/hdass08/src/amarokarts.cc" line="146" bodystart="145" bodyend="149"/>
        <referencedby refid="classAmarok_1_1Synth__STEREO__XFADE__skel_1Amarok_1_1Synth__STEREO__XFADE__skela3" compoundref="amarokarts_8cc" startline="151" endline="164">Amarok::Synth_STEREO_XFADE_skel::_buildMethodTable</referencedby>
      </memberdef>
      <memberdef kind="function" id="amarokarts_8cc_1a2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dispatch_Amarok_RawScope_00</definition>
        <argsstring>(void *object, Arts::Buffer *, Arts::Buffer *result)</argsstring>
        <name>_dispatch_Amarok_RawScope_00</name>
        <param>
          <type>void *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>Arts::Buffer *</type>
        </param>
        <param>
          <type>Arts::Buffer *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/kde_application/hdass08/src/amarokarts.cc" line="337" bodystart="336" bodyend="341"/>
        <referencedby refid="classAmarok_1_1RawScope__skel_1Amarok_1_1RawScope__skela3" compoundref="amarokarts_8cc" startline="356" endline="371">Amarok::RawScope_skel::_buildMethodTable</referencedby>
      </memberdef>
      <memberdef kind="function" id="amarokarts_8cc_1a3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dispatch_Amarok_RawScope_01</definition>
        <argsstring>(void *object, Arts::Buffer *, Arts::Buffer *result)</argsstring>
        <name>_dispatch_Amarok_RawScope_01</name>
        <param>
          <type>void *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>Arts::Buffer *</type>
        </param>
        <param>
          <type>Arts::Buffer *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/kde_application/hdass08/src/amarokarts.cc" line="345" bodystart="344" bodyend="347"/>
        <referencedby refid="classAmarok_1_1RawScope__skel_1Amarok_1_1RawScope__skela3" compoundref="amarokarts_8cc" startline="356" endline="371">Amarok::RawScope_skel::_buildMethodTable</referencedby>
      </memberdef>
      <memberdef kind="function" id="amarokarts_8cc_1a4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dispatch_Amarok_RawScope_02</definition>
        <argsstring>(void *object, Arts::Buffer *request, Arts::Buffer *)</argsstring>
        <name>_dispatch_Amarok_RawScope_02</name>
        <param>
          <type>void *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>Arts::Buffer *</type>
          <declname>request</declname>
        </param>
        <param>
          <type>Arts::Buffer *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/kde_application/hdass08/src/amarokarts.cc" line="351" bodystart="350" bodyend="354"/>
        <referencedby refid="classAmarok_1_1RawScope__skel_1Amarok_1_1RawScope__skela3" compoundref="amarokarts_8cc" startline="356" endline="371">Amarok::RawScope_skel::_buildMethodTable</referencedby>
      </memberdef>
      <memberdef kind="function" id="amarokarts_8cc_1a5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Arts::IDLFileReg</type>
        <definition>Arts::IDLFileReg IDLFileReg_amarokarts</definition>
        <argsstring>(&quot;amarokarts&quot;,&quot;IDLFile:00000001000000000000000000000000020000001b416d61726f6b3a3a5379&quot;&quot;6e74685f53544552454f5f5846414445000000000100000012417274733a3a53796e74&quot;&quot;684d6f64756c650000000000000000070000000b70657263656e746167650000000006&quot;&quot;666c6f61740000000013000000000000000b696e76616c7565315f6c0000000006666c&quot;&quot;6f61740000000009000000000000000b696e76616c7565315f720000000006666c6f61&quot;&quot;740000000009000000000000000b696e76616c7565325f6c0000000006666c6f617400&quot;&quot;00000009000000000000000b696e76616c7565325f720000000006666c6f6174000000&quot;&quot;0009000000000000000b6f757476616c75655f6c0000000006666c6f6174000000000a&quot;&quot;000000000000000b6f757476616c75655f720000000006666c6f6174000000000a0000&quot;&quot;0000000000000000000000000011416d61726f6b3a3a52617753636f70650000000001&quot;&quot;00000013417274733a3a53746572656f45666665637400000000010000000673636f70&quot;&quot;6500000000072a666c6f61740000000002000000000000000000000001000000076275&quot;&quot;6666657200000000056c6f6e67000000001300000000000000000000000000000000&quot;)</argsstring>
        <name>IDLFileReg_amarokarts</name>
        <param>
          <type>&quot;amarokarts&quot;</type>
        </param>
        <param>
          <type>&quot;IDLFile:00000001000000000000000000000000020000001b416d61726f6b3a3a5379&quot;&quot;6e74685f53544552454f5f5846414445000000000100000012417274733a3a53796e74&quot;&quot;684d6f64756c650000000000000000070000000b70657263656e746167650000000006&quot;&quot;666c6f61740000000013000000000000000b696e76616c7565315f6c0000000006666c&quot;&quot;6f61740000000009000000000000000b696e76616c7565315f720000000006666c6f61&quot;&quot;740000000009000000000000000b696e76616c7565325f6c0000000006666c6f617400&quot;&quot;00000009000000000000000b696e76616c7565325f720000000006666c6f6174000000&quot;&quot;0009000000000000000b6f757476616c75655f6c0000000006666c6f6174000000000a&quot;&quot;000000000000000b6f757476616c75655f720000000006666c6f6174000000000a0000&quot;&quot;0000000000000000000000000011416d61726f6b3a3a52617753636f70650000000001&quot;&quot;00000013417274733a3a53746572656f45666665637400000000010000000673636f70&quot;&quot;6500000000072a666c6f61740000000002000000000000000000000001000000076275&quot;&quot;6666657200000000056c6f6e67000000001300000000000000000000000000000000&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/kde_application/hdass08/src/amarokarts.cc" line="397"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>this<sp/>file<sp/>was<sp/>generated<sp/>by<sp/>the<sp/>MCOP<sp/>idl<sp/>compiler<sp/>-<sp/>DO<sp/>NOT<sp/>EDIT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="amarokarts_8h" kindref="compound">amarokarts.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;artsflow.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="classAmarok_1_1Synth__STEREO__XFADE__base_1Amarok_1_1Synth__STEREO__XFADE__stube0" refkind="member"><highlight class="normal"><ref refid="classAmarok_1_1Synth__STEREO__XFADE__base" kindref="compound">Amarok::Synth_STEREO_XFADE_base</ref><sp/>*<ref refid="classAmarok_1_1Synth__STEREO__XFADE__base_1Amarok_1_1Synth__STEREO__XFADE__stube0" kindref="member">Amarok::Synth_STEREO_XFADE_base::_create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>subClass)</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arts::Object_skel<sp/>*skel<sp/>=<sp/>Arts::ObjectManager::the()-&gt;create(subClass);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(skel);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAmarok_1_1Synth__STEREO__XFADE__base" kindref="compound">Amarok::Synth_STEREO_XFADE_base</ref><sp/>*castedObject<sp/>=<sp/>(<ref refid="classAmarok_1_1Synth__STEREO__XFADE__base" kindref="compound">Amarok::Synth_STEREO_XFADE_base</ref><sp/>*)skel-&gt;_cast(<ref refid="classAmarok_1_1Synth__STEREO__XFADE__base_1Amarok_1_1Synth__STEREO__XFADE__stubs0" kindref="member">Amarok::Synth_STEREO_XFADE_base::_IID</ref>);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(castedObject);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>castedObject;</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classAmarok_1_1Synth__STEREO__XFADE__base_1Amarok_1_1Synth__STEREO__XFADE__stube1" refkind="member"><highlight class="normal"><ref refid="classAmarok_1_1Synth__STEREO__XFADE__base" kindref="compound">Amarok::Synth_STEREO_XFADE_base</ref><sp/>*<ref refid="classAmarok_1_1Synth__STEREO__XFADE__base_1Amarok_1_1Synth__STEREO__XFADE__stube1" kindref="member">Amarok::Synth_STEREO_XFADE_base::_fromString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>objectref)</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arts::ObjectReference<sp/>r;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Arts::Dispatcher::the()-&gt;stringToObjectReference(r,objectref))</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classAmarok_1_1Synth__STEREO__XFADE__base_1Amarok_1_1Synth__STEREO__XFADE__stube2" kindref="member">Amarok::Synth_STEREO_XFADE_base::_fromReference</ref>(r,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classAmarok_1_1Synth__STEREO__XFADE__base_1Amarok_1_1Synth__STEREO__XFADE__stube3" refkind="member"><highlight class="normal"><ref refid="classAmarok_1_1Synth__STEREO__XFADE__base" kindref="compound">Amarok::Synth_STEREO_XFADE_base</ref><sp/>*<ref refid="classAmarok_1_1Synth__STEREO__XFADE__base_1Amarok_1_1Synth__STEREO__XFADE__stube3" kindref="member">Amarok::Synth_STEREO_XFADE_base::_fromDynamicCast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Arts::Object&amp;<sp/>object)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(object.isNull())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAmarok_1_1Synth__STEREO__XFADE__base" kindref="compound">Amarok::Synth_STEREO_XFADE_base</ref><sp/>*castedObject<sp/>=<sp/>(<ref refid="classAmarok_1_1Synth__STEREO__XFADE__base" kindref="compound">Amarok::Synth_STEREO_XFADE_base</ref><sp/>*)object._base()-&gt;<ref refid="classAmarok_1_1Synth__STEREO__XFADE__base_1Amarok_1_1Synth__STEREO__XFADE__stuba6" kindref="member">_cast</ref>(<ref refid="classAmarok_1_1Synth__STEREO__XFADE__base_1Amarok_1_1Synth__STEREO__XFADE__stubs0" kindref="member">Amarok::Synth_STEREO_XFADE_base::_IID</ref>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(castedObject)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>castedObject-&gt;<ref refid="classAmarok_1_1Synth__STEREO__XFADE__base_1Amarok_1_1Synth__STEREO__XFADE__stuba3" kindref="member">_copy</ref>();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classAmarok_1_1Synth__STEREO__XFADE__base_1Amarok_1_1Synth__STEREO__XFADE__stube1" kindref="member">_fromString</ref>(object._toString());</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classAmarok_1_1Synth__STEREO__XFADE__base_1Amarok_1_1Synth__STEREO__XFADE__stube2" refkind="member"><highlight class="normal"><ref refid="classAmarok_1_1Synth__STEREO__XFADE__base" kindref="compound">Amarok::Synth_STEREO_XFADE_base</ref><sp/>*<ref refid="classAmarok_1_1Synth__STEREO__XFADE__base_1Amarok_1_1Synth__STEREO__XFADE__stube2" kindref="member">Amarok::Synth_STEREO_XFADE_base::_fromReference</ref>(Arts::ObjectReference<sp/>r,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>needcopy)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAmarok_1_1Synth__STEREO__XFADE__base" kindref="compound">Amarok::Synth_STEREO_XFADE_base</ref><sp/>*result;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>(<ref refid="classAmarok_1_1Synth__STEREO__XFADE__base" kindref="compound">Amarok::Synth_STEREO_XFADE_base</ref><sp/>*)Arts::Dispatcher::the()-&gt;connectObjectLocal(r,</highlight><highlight class="stringliteral">&quot;Amarok::Synth_STEREO_XFADE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!needcopy)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;_cancelCopyRemote();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arts::Connection<sp/>*conn<sp/>=<sp/>Arts::Dispatcher::the()-&gt;connectObjectRemote(r);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classAmarok_1_1Synth__STEREO__XFADE__stub" kindref="compound">Amarok::Synth_STEREO_XFADE_stub</ref>(conn,r.objectID);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(needcopy)<sp/>result-&gt;_copyRemote();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;_useRemote();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result-&gt;_isCompatibleWith(</highlight><highlight class="stringliteral">&quot;Amarok::Synth_STEREO_XFADE&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;_release();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classAmarok_1_1Synth__STEREO__XFADE__base_1Amarok_1_1Synth__STEREO__XFADE__stuba4" refkind="member"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="classAmarok_1_1Synth__STEREO__XFADE__base_1Amarok_1_1Synth__STEREO__XFADE__stuba4" kindref="member">Amarok::Synth_STEREO_XFADE_base::_defaultPortsIn</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66" refid="classAmarok_1_1Synth__STEREO__XFADE__base_1Amarok_1_1Synth__STEREO__XFADE__stuba5" refkind="member"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="classAmarok_1_1Synth__STEREO__XFADE__base_1Amarok_1_1Synth__STEREO__XFADE__stuba5" kindref="member">Amarok::Synth_STEREO_XFADE_base::_defaultPortsOut</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classAmarok_1_1Synth__STEREO__XFADE__base_1Amarok_1_1Synth__STEREO__XFADE__stuba6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="classAmarok_1_1Synth__STEREO__XFADE__base_1Amarok_1_1Synth__STEREO__XFADE__stuba6" kindref="member">Amarok::Synth_STEREO_XFADE_base::_cast</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>iid)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iid<sp/>==<sp/><ref refid="classAmarok_1_1Synth__STEREO__XFADE__base_1Amarok_1_1Synth__STEREO__XFADE__stubs0" kindref="member">Amarok::Synth_STEREO_XFADE_base::_IID</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classAmarok_1_1Synth__STEREO__XFADE__base" kindref="compound">Amarok::Synth_STEREO_XFADE_base</ref><sp/>*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iid<sp/>==<sp/>Arts::SynthModule_base::_IID)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Arts::SynthModule_base<sp/>*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iid<sp/>==<sp/>Arts::Object_base::_IID)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Arts::Object_base<sp/>*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classAmarok_1_1Synth__STEREO__XFADE__stub_1Amarok_1_1Synth__STEREO__XFADE__stubb0" refkind="member"><highlight class="normal"><ref refid="classAmarok_1_1Synth__STEREO__XFADE__stub_1Amarok_1_1Synth__STEREO__XFADE__stubb0" kindref="member">Amarok::Synth_STEREO_XFADE_stub::Synth_STEREO_XFADE_stub</ref>()</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>constructor<sp/>for<sp/>subclasses<sp/>(don&apos;t<sp/>use<sp/>directly)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classAmarok_1_1Synth__STEREO__XFADE__stub_1Amarok_1_1Synth__STEREO__XFADE__stuba0" refkind="member"><highlight class="normal"><ref refid="classAmarok_1_1Synth__STEREO__XFADE__stub_1Amarok_1_1Synth__STEREO__XFADE__stubb0" kindref="member">Amarok::Synth_STEREO_XFADE_stub::Synth_STEREO_XFADE_stub</ref>(Arts::Connection<sp/>*connection,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>objectID)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Arts::Object_stub(connection,<sp/>objectID)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>constructor<sp/>to<sp/>create<sp/>a<sp/>stub<sp/>for<sp/>an<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classAmarok_1_1Synth__STEREO__XFADE__stub_1Amarok_1_1Synth__STEREO__XFADE__stuba1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classAmarok_1_1Synth__STEREO__XFADE__stub_1Amarok_1_1Synth__STEREO__XFADE__stuba1" kindref="member">Amarok::Synth_STEREO_XFADE_stub::percentage</ref>()</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>methodID<sp/>=<sp/>_lookupMethodFast(</highlight><highlight class="stringliteral">&quot;method:000000105f6765745f70657263656e746167650000000006666c6f617400000000020000000000000000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>requestID;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arts::Buffer<sp/>*request,<sp/>*result;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request<sp/>=<sp/>Arts::Dispatcher::the()-&gt;createRequest(requestID,_objectID,methodID);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request-&gt;patchLength();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_connection-&gt;qSendBuffer(request);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Arts::Dispatcher::the()-&gt;waitForResult(requestID,_connection);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!result)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;<sp/></highlight><highlight class="comment">//<sp/>error<sp/>occurred</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>returnCode<sp/>=<sp/>result-&gt;readFloat();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>returnCode;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="classAmarok_1_1Synth__STEREO__XFADE__stub_1Amarok_1_1Synth__STEREO__XFADE__stuba2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAmarok_1_1Synth__STEREO__XFADE__stub_1Amarok_1_1Synth__STEREO__XFADE__stuba1" kindref="member">Amarok::Synth_STEREO_XFADE_stub::percentage</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>newValue)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>methodID<sp/>=<sp/>_lookupMethodFast(</highlight><highlight class="stringliteral">&quot;method:000000105f7365745f70657263656e746167650000000005766f696400000000020000000100000006666c6f617400000000096e657756616c7565000000000000000000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>requestID;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arts::Buffer<sp/>*request,<sp/>*result;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request<sp/>=<sp/>Arts::Dispatcher::the()-&gt;createRequest(requestID,_objectID,methodID);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request-&gt;writeFloat(newValue);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request-&gt;patchLength();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_connection-&gt;qSendBuffer(request);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Arts::Dispatcher::the()-&gt;waitForResult(requestID,_connection);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classAmarok_1_1Synth__STEREO__XFADE__skel_1Amarok_1_1Synth__STEREO__XFADE__skela1" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classAmarok_1_1Synth__STEREO__XFADE__skel_1Amarok_1_1Synth__STEREO__XFADE__skela1" kindref="member">Amarok::Synth_STEREO_XFADE_skel::_interfaceName</ref>()</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Amarok::Synth_STEREO_XFADE&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="classAmarok_1_1Synth__STEREO__XFADE__skel_1Amarok_1_1Synth__STEREO__XFADE__skela2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classAmarok_1_1Synth__STEREO__XFADE__skel_1Amarok_1_1Synth__STEREO__XFADE__skela2" kindref="member">Amarok::Synth_STEREO_XFADE_skel::_isCompatibleWith</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>interfacename)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interfacename<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Amarok::Synth_STEREO_XFADE&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interfacename<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Arts::SynthModule&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interfacename<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Arts::Object&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="classAmarok_1_1Synth__STEREO__XFADE__skel_1Amarok_1_1Synth__STEREO__XFADE__skele0" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classAmarok_1_1Synth__STEREO__XFADE__skel_1Amarok_1_1Synth__STEREO__XFADE__skele0" kindref="member">Amarok::Synth_STEREO_XFADE_skel::_interfaceNameSkel</ref>()</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Amarok::Synth_STEREO_XFADE&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/>_get_percentage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="amarokarts_8cc_1a0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="amarokarts_8cc_1a0" kindref="member">_dispatch_Amarok_Synth_STEREO_XFADE_00</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*object,<sp/>Arts::Buffer<sp/>*,<sp/>Arts::Buffer<sp/>*result)</highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;writeFloat(((<ref refid="classAmarok_1_1Synth__STEREO__XFADE__skel" kindref="compound">Amarok::Synth_STEREO_XFADE_skel</ref><sp/>*)object)-&gt;percentage());</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/>_set_percentage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="amarokarts_8cc_1a1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="amarokarts_8cc_1a1" kindref="member">_dispatch_Amarok_Synth_STEREO_XFADE_01</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*object,<sp/>Arts::Buffer<sp/>*request,<sp/>Arts::Buffer<sp/>*)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>newValue<sp/>=<sp/>request-&gt;readFloat();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="classAmarok_1_1Synth__STEREO__XFADE__skel" kindref="compound">Amarok::Synth_STEREO_XFADE_skel</ref><sp/>*)object)-&gt;percentage(newValue);</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="classAmarok_1_1Synth__STEREO__XFADE__skel_1Amarok_1_1Synth__STEREO__XFADE__skela3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAmarok_1_1Synth__STEREO__XFADE__skel_1Amarok_1_1Synth__STEREO__XFADE__skela3" kindref="member">Amarok::Synth_STEREO_XFADE_skel::_buildMethodTable</ref>()</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arts::Buffer<sp/>m;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.fromString(</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MethodTable:000000105f6765745f70657263656e746167650000000006666c6f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;617400000000020000000000000000000000105f7365745f70657263656e746167&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;650000000005766f696400000000020000000100000006666c6f61740000000009&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;6e657756616c7565000000000000000000&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MethodTable&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_addMethod(<ref refid="amarokarts_8cc_1a0" kindref="member">_dispatch_Amarok_Synth_STEREO_XFADE_00</ref>,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,Arts::MethodDef(m));</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_addMethod(<ref refid="amarokarts_8cc_1a1" kindref="member">_dispatch_Amarok_Synth_STEREO_XFADE_01</ref>,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,Arts::MethodDef(m));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arts::SynthModule_skel::_buildMethodTable();</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="classAmarok_1_1Synth__STEREO__XFADE__skel_1Amarok_1_1Synth__STEREO__XFADE__skela0" refkind="member"><highlight class="normal"><ref refid="classAmarok_1_1Synth__STEREO__XFADE__skel_1Amarok_1_1Synth__STEREO__XFADE__skela0" kindref="member">Amarok::Synth_STEREO_XFADE_skel::Synth_STEREO_XFADE_skel</ref>()</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_initStream(</highlight><highlight class="stringliteral">&quot;invalue1_l&quot;</highlight><highlight class="normal">,&amp;<ref refid="classAmarok_1_1Synth__STEREO__XFADE__skel_1Amarok_1_1Synth__STEREO__XFADE__skelp0" kindref="member">invalue1_l</ref>,9);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_initStream(</highlight><highlight class="stringliteral">&quot;invalue1_r&quot;</highlight><highlight class="normal">,&amp;<ref refid="classAmarok_1_1Synth__STEREO__XFADE__skel_1Amarok_1_1Synth__STEREO__XFADE__skelp1" kindref="member">invalue1_r</ref>,9);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_initStream(</highlight><highlight class="stringliteral">&quot;invalue2_l&quot;</highlight><highlight class="normal">,&amp;<ref refid="classAmarok_1_1Synth__STEREO__XFADE__skel_1Amarok_1_1Synth__STEREO__XFADE__skelp2" kindref="member">invalue2_l</ref>,9);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_initStream(</highlight><highlight class="stringliteral">&quot;invalue2_r&quot;</highlight><highlight class="normal">,&amp;<ref refid="classAmarok_1_1Synth__STEREO__XFADE__skel_1Amarok_1_1Synth__STEREO__XFADE__skelp3" kindref="member">invalue2_r</ref>,9);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_initStream(</highlight><highlight class="stringliteral">&quot;outvalue_l&quot;</highlight><highlight class="normal">,&amp;<ref refid="classAmarok_1_1Synth__STEREO__XFADE__skel_1Amarok_1_1Synth__STEREO__XFADE__skelp4" kindref="member">outvalue_l</ref>,10);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_initStream(</highlight><highlight class="stringliteral">&quot;outvalue_r&quot;</highlight><highlight class="normal">,&amp;<ref refid="classAmarok_1_1Synth__STEREO__XFADE__skel_1Amarok_1_1Synth__STEREO__XFADE__skelp5" kindref="member">outvalue_r</ref>,10);</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="classAmarok_1_1Synth__STEREO__XFADE_1Amarok_1_1Synth__STEREO__XFADEh0" refkind="member"><highlight class="normal">Arts::Object_base*<sp/><ref refid="classAmarok_1_1Synth__STEREO__XFADE_1Amarok_1_1Synth__STEREO__XFADEh0" kindref="member">Amarok::Synth_STEREO_XFADE::_Creator</ref>()<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classAmarok_1_1Synth__STEREO__XFADE__base_1Amarok_1_1Synth__STEREO__XFADE__stube0" kindref="member">Amarok::Synth_STEREO_XFADE_base::_create</ref>();</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="classAmarok_1_1Synth__STEREO__XFADE__base_1Amarok_1_1Synth__STEREO__XFADE__stubs0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classAmarok_1_1Synth__STEREO__XFADE__base_1Amarok_1_1Synth__STEREO__XFADE__stubs0" kindref="member">Amarok::Synth_STEREO_XFADE_base::_IID</ref><sp/>=<sp/>Arts::MCOPUtils::makeIID(</highlight><highlight class="stringliteral">&quot;Amarok::Synth_STEREO_XFADE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="classAmarok_1_1RawScope__base_1Amarok_1_1RawScope__stube0" refkind="member"><highlight class="normal"><ref refid="classAmarok_1_1RawScope__base" kindref="compound">Amarok::RawScope_base</ref><sp/>*<ref refid="classAmarok_1_1RawScope__base_1Amarok_1_1RawScope__stube0" kindref="member">Amarok::RawScope_base::_create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>subClass)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arts::Object_skel<sp/>*skel<sp/>=<sp/>Arts::ObjectManager::the()-&gt;create(subClass);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(skel);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAmarok_1_1RawScope__base" kindref="compound">Amarok::RawScope_base</ref><sp/>*castedObject<sp/>=<sp/>(<ref refid="classAmarok_1_1RawScope__base" kindref="compound">Amarok::RawScope_base</ref><sp/>*)skel-&gt;_cast(<ref refid="classAmarok_1_1RawScope__base_1Amarok_1_1RawScope__stubs0" kindref="member">Amarok::RawScope_base::_IID</ref>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(castedObject);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>castedObject;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="classAmarok_1_1RawScope__base_1Amarok_1_1RawScope__stube1" refkind="member"><highlight class="normal"><ref refid="classAmarok_1_1RawScope__base" kindref="compound">Amarok::RawScope_base</ref><sp/>*<ref refid="classAmarok_1_1RawScope__base_1Amarok_1_1RawScope__stube1" kindref="member">Amarok::RawScope_base::_fromString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>objectref)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arts::ObjectReference<sp/>r;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Arts::Dispatcher::the()-&gt;stringToObjectReference(r,objectref))</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classAmarok_1_1RawScope__base_1Amarok_1_1RawScope__stube2" kindref="member">Amarok::RawScope_base::_fromReference</ref>(r,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="classAmarok_1_1RawScope__base_1Amarok_1_1RawScope__stube3" refkind="member"><highlight class="normal"><ref refid="classAmarok_1_1RawScope__base" kindref="compound">Amarok::RawScope_base</ref><sp/>*<ref refid="classAmarok_1_1RawScope__base_1Amarok_1_1RawScope__stube3" kindref="member">Amarok::RawScope_base::_fromDynamicCast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Arts::Object&amp;<sp/>object)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(object.isNull())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAmarok_1_1RawScope__base" kindref="compound">Amarok::RawScope_base</ref><sp/>*castedObject<sp/>=<sp/>(<ref refid="classAmarok_1_1RawScope__base" kindref="compound">Amarok::RawScope_base</ref><sp/>*)object._base()-&gt;<ref refid="classAmarok_1_1RawScope__base_1Amarok_1_1RawScope__stuba7" kindref="member">_cast</ref>(<ref refid="classAmarok_1_1RawScope__base_1Amarok_1_1RawScope__stubs0" kindref="member">Amarok::RawScope_base::_IID</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(castedObject)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>castedObject-&gt;<ref refid="classAmarok_1_1RawScope__base_1Amarok_1_1RawScope__stuba4" kindref="member">_copy</ref>();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classAmarok_1_1RawScope__base_1Amarok_1_1RawScope__stube1" kindref="member">_fromString</ref>(object._toString());</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="classAmarok_1_1RawScope__base_1Amarok_1_1RawScope__stube2" refkind="member"><highlight class="normal"><ref refid="classAmarok_1_1RawScope__base" kindref="compound">Amarok::RawScope_base</ref><sp/>*<ref refid="classAmarok_1_1RawScope__base_1Amarok_1_1RawScope__stube2" kindref="member">Amarok::RawScope_base::_fromReference</ref>(Arts::ObjectReference<sp/>r,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>needcopy)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAmarok_1_1RawScope__base" kindref="compound">Amarok::RawScope_base</ref><sp/>*result;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>(<ref refid="classAmarok_1_1RawScope__base" kindref="compound">Amarok::RawScope_base</ref><sp/>*)Arts::Dispatcher::the()-&gt;connectObjectLocal(r,</highlight><highlight class="stringliteral">&quot;Amarok::RawScope&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!needcopy)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;_cancelCopyRemote();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arts::Connection<sp/>*conn<sp/>=<sp/>Arts::Dispatcher::the()-&gt;connectObjectRemote(r);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classAmarok_1_1RawScope__stub" kindref="compound">Amarok::RawScope_stub</ref>(conn,r.objectID);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(needcopy)<sp/>result-&gt;_copyRemote();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;_useRemote();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result-&gt;_isCompatibleWith(</highlight><highlight class="stringliteral">&quot;Amarok::RawScope&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;_release();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="classAmarok_1_1RawScope__base_1Amarok_1_1RawScope__stuba5" refkind="member"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="classAmarok_1_1RawScope__base_1Amarok_1_1RawScope__stuba5" kindref="member">Amarok::RawScope_base::_defaultPortsIn</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.push_back(</highlight><highlight class="stringliteral">&quot;inleft&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.push_back(</highlight><highlight class="stringliteral">&quot;inright&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242" refid="classAmarok_1_1RawScope__base_1Amarok_1_1RawScope__stuba6" refkind="member"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="classAmarok_1_1RawScope__base_1Amarok_1_1RawScope__stuba6" kindref="member">Amarok::RawScope_base::_defaultPortsOut</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.push_back(</highlight><highlight class="stringliteral">&quot;outleft&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.push_back(</highlight><highlight class="stringliteral">&quot;outright&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="classAmarok_1_1RawScope__base_1Amarok_1_1RawScope__stuba7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="classAmarok_1_1RawScope__base_1Amarok_1_1RawScope__stuba7" kindref="member">Amarok::RawScope_base::_cast</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>iid)</highlight></codeline>
<codeline lineno="250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iid<sp/>==<sp/><ref refid="classAmarok_1_1RawScope__base_1Amarok_1_1RawScope__stubs0" kindref="member">Amarok::RawScope_base::_IID</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classAmarok_1_1RawScope__base" kindref="compound">Amarok::RawScope_base</ref><sp/>*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iid<sp/>==<sp/>Arts::StereoEffect_base::_IID)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Arts::StereoEffect_base<sp/>*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iid<sp/>==<sp/>Arts::SynthModule_base::_IID)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Arts::SynthModule_base<sp/>*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iid<sp/>==<sp/>Arts::Object_base::_IID)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Arts::Object_base<sp/>*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="classAmarok_1_1RawScope__stub_1Amarok_1_1RawScope__stubb0" refkind="member"><highlight class="normal"><ref refid="classAmarok_1_1RawScope__stub_1Amarok_1_1RawScope__stubb0" kindref="member">Amarok::RawScope_stub::RawScope_stub</ref>()</highlight></codeline>
<codeline lineno="259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>constructor<sp/>for<sp/>subclasses<sp/>(don&apos;t<sp/>use<sp/>directly)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="classAmarok_1_1RawScope__stub_1Amarok_1_1RawScope__stuba0" refkind="member"><highlight class="normal"><ref refid="classAmarok_1_1RawScope__stub_1Amarok_1_1RawScope__stubb0" kindref="member">Amarok::RawScope_stub::RawScope_stub</ref>(Arts::Connection<sp/>*connection,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>objectID)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Arts::Object_stub(connection,<sp/>objectID)</highlight></codeline>
<codeline lineno="265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>constructor<sp/>to<sp/>create<sp/>a<sp/>stub<sp/>for<sp/>an<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="classAmarok_1_1RawScope__stub_1Amarok_1_1RawScope__stuba3" refkind="member"><highlight class="normal">std::vector&lt;float&gt;<sp/>*<sp/><ref refid="classAmarok_1_1RawScope__stub_1Amarok_1_1RawScope__stuba3" kindref="member">Amarok::RawScope_stub::scope</ref>()</highlight></codeline>
<codeline lineno="270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>methodID<sp/>=<sp/>_lookupMethodFast(</highlight><highlight class="stringliteral">&quot;method:0000000673636f706500000000072a666c6f617400000000020000000000000000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>requestID;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arts::Buffer<sp/>*request,<sp/>*result;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request<sp/>=<sp/>Arts::Dispatcher::the()-&gt;createRequest(requestID,_objectID,methodID);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request-&gt;patchLength();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_connection-&gt;qSendBuffer(request);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Arts::Dispatcher::the()-&gt;waitForResult(requestID,_connection);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;<sp/>*_returnCode<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!result)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_returnCode;<sp/></highlight><highlight class="comment">//<sp/>error<sp/>occurred</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;readFloatSeq(*_returnCode);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_returnCode;</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="classAmarok_1_1RawScope__stub_1Amarok_1_1RawScope__stuba1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classAmarok_1_1RawScope__stub_1Amarok_1_1RawScope__stuba1" kindref="member">Amarok::RawScope_stub::buffer</ref>()</highlight></codeline>
<codeline lineno="287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>methodID<sp/>=<sp/>_lookupMethodFast(</highlight><highlight class="stringliteral">&quot;method:0000000c5f6765745f62756666657200000000056c6f6e6700000000020000000000000000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>requestID;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arts::Buffer<sp/>*request,<sp/>*result;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request<sp/>=<sp/>Arts::Dispatcher::the()-&gt;createRequest(requestID,_objectID,methodID);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request-&gt;patchLength();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_connection-&gt;qSendBuffer(request);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Arts::Dispatcher::the()-&gt;waitForResult(requestID,_connection);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!result)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>error<sp/>occurred</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>returnCode<sp/>=<sp/>result-&gt;readLong();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>returnCode;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="classAmarok_1_1RawScope__stub_1Amarok_1_1RawScope__stuba2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAmarok_1_1RawScope__stub_1Amarok_1_1RawScope__stuba1" kindref="member">Amarok::RawScope_stub::buffer</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>newValue)</highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>methodID<sp/>=<sp/>_lookupMethodFast(</highlight><highlight class="stringliteral">&quot;method:0000000c5f7365745f6275666665720000000005766f6964000000000200000001000000056c6f6e6700000000096e657756616c7565000000000000000000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>requestID;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arts::Buffer<sp/>*request,<sp/>*result;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request<sp/>=<sp/>Arts::Dispatcher::the()-&gt;createRequest(requestID,_objectID,methodID);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request-&gt;writeLong(newValue);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request-&gt;patchLength();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_connection-&gt;qSendBuffer(request);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Arts::Dispatcher::the()-&gt;waitForResult(requestID,_connection);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="classAmarok_1_1RawScope__skel_1Amarok_1_1RawScope__skela1" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classAmarok_1_1RawScope__skel_1Amarok_1_1RawScope__skela1" kindref="member">Amarok::RawScope_skel::_interfaceName</ref>()</highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Amarok::RawScope&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="classAmarok_1_1RawScope__skel_1Amarok_1_1RawScope__skela2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classAmarok_1_1RawScope__skel_1Amarok_1_1RawScope__skela2" kindref="member">Amarok::RawScope_skel::_isCompatibleWith</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>interfacename)</highlight></codeline>
<codeline lineno="322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interfacename<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Amarok::RawScope&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interfacename<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Arts::StereoEffect&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interfacename<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Arts::SynthModule&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interfacename<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Arts::Object&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="classAmarok_1_1RawScope__skel_1Amarok_1_1RawScope__skele0" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classAmarok_1_1RawScope__skel_1Amarok_1_1RawScope__skele0" kindref="member">Amarok::RawScope_skel::_interfaceNameSkel</ref>()</highlight></codeline>
<codeline lineno="331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Amarok::RawScope&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="comment">//<sp/>scope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="amarokarts_8cc_1a2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="amarokarts_8cc_1a2" kindref="member">_dispatch_Amarok_RawScope_00</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*object,<sp/>Arts::Buffer<sp/>*,<sp/>Arts::Buffer<sp/>*result)</highlight></codeline>
<codeline lineno="337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;<sp/>*_returnCode<sp/>=<sp/>((<ref refid="classAmarok_1_1RawScope__skel" kindref="compound">Amarok::RawScope_skel</ref><sp/>*)object)-&gt;scope();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;writeFloatSeq(*_returnCode);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>_returnCode;</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="comment">//<sp/>_get_buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="amarokarts_8cc_1a3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="amarokarts_8cc_1a3" kindref="member">_dispatch_Amarok_RawScope_01</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*object,<sp/>Arts::Buffer<sp/>*,<sp/>Arts::Buffer<sp/>*result)</highlight></codeline>
<codeline lineno="345"><highlight class="normal">{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;writeLong(((<ref refid="classAmarok_1_1RawScope__skel" kindref="compound">Amarok::RawScope_skel</ref><sp/>*)object)-&gt;buffer());</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">//<sp/>_set_buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="amarokarts_8cc_1a4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="amarokarts_8cc_1a4" kindref="member">_dispatch_Amarok_RawScope_02</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*object,<sp/>Arts::Buffer<sp/>*request,<sp/>Arts::Buffer<sp/>*)</highlight></codeline>
<codeline lineno="351"><highlight class="normal">{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>newValue<sp/>=<sp/>request-&gt;readLong();</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="classAmarok_1_1RawScope__skel" kindref="compound">Amarok::RawScope_skel</ref><sp/>*)object)-&gt;buffer(newValue);</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="classAmarok_1_1RawScope__skel_1Amarok_1_1RawScope__skela3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAmarok_1_1RawScope__skel_1Amarok_1_1RawScope__skela3" kindref="member">Amarok::RawScope_skel::_buildMethodTable</ref>()</highlight></codeline>
<codeline lineno="357"><highlight class="normal">{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arts::Buffer<sp/>m;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.fromString(</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MethodTable:0000000673636f706500000000072a666c6f617400000000020000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;0000000000000000000c5f6765745f62756666657200000000056c6f6e67000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;000200000000000000000000000c5f7365745f6275666665720000000005766f69&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;64000000000200000001000000056c6f6e6700000000096e657756616c75650000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000000000000&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MethodTable&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_addMethod(<ref refid="amarokarts_8cc_1a2" kindref="member">_dispatch_Amarok_RawScope_00</ref>,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,Arts::MethodDef(m));</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_addMethod(<ref refid="amarokarts_8cc_1a3" kindref="member">_dispatch_Amarok_RawScope_01</ref>,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,Arts::MethodDef(m));</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_addMethod(<ref refid="amarokarts_8cc_1a4" kindref="member">_dispatch_Amarok_RawScope_02</ref>,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,Arts::MethodDef(m));</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arts::StereoEffect_skel::_buildMethodTable();</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="classAmarok_1_1RawScope__skel_1Amarok_1_1RawScope__skela0" refkind="member"><highlight class="normal"><ref refid="classAmarok_1_1RawScope__skel_1Amarok_1_1RawScope__skela0" kindref="member">Amarok::RawScope_skel::RawScope_skel</ref>()</highlight></codeline>
<codeline lineno="374"><highlight class="normal">{</highlight></codeline>
<codeline lineno="375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377" refid="classAmarok_1_1RawScope_1Amarok_1_1RawScopeh0" refkind="member"><highlight class="normal">Arts::Object_base*<sp/><ref refid="classAmarok_1_1RawScope_1Amarok_1_1RawScopeh0" kindref="member">Amarok::RawScope::_Creator</ref>()<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classAmarok_1_1RawScope__base_1Amarok_1_1RawScope__stube0" kindref="member">Amarok::RawScope_base::_create</ref>();</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="classAmarok_1_1RawScope__base_1Amarok_1_1RawScope__stubs0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classAmarok_1_1RawScope__base_1Amarok_1_1RawScope__stubs0" kindref="member">Amarok::RawScope_base::_IID</ref><sp/>=<sp/>Arts::MCOPUtils::makeIID(</highlight><highlight class="stringliteral">&quot;Amarok::RawScope&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Arts::IDLFileReg<sp/><ref refid="amarokarts_8cc_1a5" kindref="member">IDLFileReg_amarokarts</ref>(</highlight><highlight class="stringliteral">&quot;amarokarts&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;IDLFile:00000001000000000000000000000000020000001b416d61726f6b3a3a5379&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;6e74685f53544552454f5f5846414445000000000100000012417274733a3a53796e74&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;684d6f64756c650000000000000000070000000b70657263656e746167650000000006&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;666c6f61740000000013000000000000000b696e76616c7565315f6c0000000006666c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;6f61740000000009000000000000000b696e76616c7565315f720000000006666c6f61&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;740000000009000000000000000b696e76616c7565325f6c0000000006666c6f617400&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000009000000000000000b696e76616c7565325f720000000006666c6f6174000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;0009000000000000000b6f757476616c75655f6c0000000006666c6f6174000000000a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;000000000000000b6f757476616c75655f720000000006666c6f6174000000000a0000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;0000000000000000000000000011416d61726f6b3a3a52617753636f70650000000001&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000013417274733a3a53746572656f45666665637400000000010000000673636f70&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;6500000000072a666c6f61740000000002000000000000000000000001000000076275&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;6666657200000000056c6f6e67000000001300000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal">);</highlight></codeline>
    </programlisting>
    <location file="/root/kde_application/hdass08/src/amarokarts.cc"/>
  </compounddef>
</doxygen>
