<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.3.6">
  <compounddef id="enginecontroller_8cpp" kind="file">
    <compoundname>enginecontroller.cpp</compoundname>
    <includes refid="enginecontroller_8h" local="yes">enginecontroller.h</includes>
    <includes refid="enginebase_8h" local="yes">enginebase.h</includes>
    <includes refid="amarokconfig_8h" local="yes">amarokconfig.h</includes>
    <includes refid="metabundle_8h" local="yes">metabundle.h</includes>
    <includes local="no">kdebug.h</includes>
    <includes local="no">qtimer.h</includes>
    <includes local="no">kurl.h</includes>
    <includes refid="enginecontroller_8moc" local="yes">enginecontroller.moc</includes>
    <incdepgraph>
      <node id="2953">
        <label>kconfigskeleton.h</label>
      </node>
      <node id="2955">
        <label>qtimer.h</label>
      </node>
      <node id="2959">
        <label>private/qucomextra_p.h</label>
      </node>
      <node id="2945">
        <label>enginebase.h</label>
        <link refid="enginebase_8h"/>
        <childnode refid="2946" relation="include">
        </childnode>
        <childnode refid="2943" relation="include">
        </childnode>
        <childnode refid="2947" relation="include">
        </childnode>
      </node>
      <node id="2943">
        <label>qobject.h</label>
      </node>
      <node id="2950">
        <label>kurl.h</label>
      </node>
      <node id="2949">
        <label>metabundle.h</label>
        <link refid="metabundle_8h"/>
        <childnode refid="2950" relation="include">
        </childnode>
        <childnode refid="2951" relation="include">
        </childnode>
      </node>
      <node id="2954">
        <label>kdebug.h</label>
      </node>
      <node id="2948">
        <label>qptrlist.h</label>
      </node>
      <node id="2956">
        <label>enginecontroller.moc</label>
        <link refid="enginecontroller_8moc"/>
        <childnode refid="2942" relation="include">
        </childnode>
        <childnode refid="2957" relation="include">
        </childnode>
        <childnode refid="2958" relation="include">
        </childnode>
        <childnode refid="2959" relation="include">
        </childnode>
      </node>
      <node id="2958">
        <label>qapplication.h</label>
      </node>
      <node id="2951">
        <label>klocale.h</label>
      </node>
      <node id="2952">
        <label>amarokconfig.h</label>
        <link refid="amarokconfig_8h"/>
        <childnode refid="2953" relation="include">
        </childnode>
      </node>
      <node id="2946">
        <label>vector</label>
      </node>
      <node id="2944">
        <label>engineobserver.h</label>
        <link refid="engineobserver_8h"/>
        <childnode refid="2945" relation="include">
        </childnode>
        <childnode refid="2948" relation="include">
        </childnode>
      </node>
      <node id="2941">
        <label>enginecontroller.cpp</label>
        <link refid="enginecontroller.cpp"/>
        <childnode refid="2942" relation="include">
        </childnode>
        <childnode refid="2945" relation="include">
        </childnode>
        <childnode refid="2952" relation="include">
        </childnode>
        <childnode refid="2949" relation="include">
        </childnode>
        <childnode refid="2954" relation="include">
        </childnode>
        <childnode refid="2955" relation="include">
        </childnode>
        <childnode refid="2950" relation="include">
        </childnode>
        <childnode refid="2956" relation="include">
        </childnode>
      </node>
      <node id="2942">
        <label>enginecontroller.h</label>
        <link refid="enginecontroller_8h"/>
        <childnode refid="2943" relation="include">
        </childnode>
        <childnode refid="2944" relation="include">
        </childnode>
        <childnode refid="2949" relation="include">
        </childnode>
      </node>
      <node id="2957">
        <label>qmetaobject.h</label>
      </node>
      <node id="2947">
        <label>qstringlist.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="classDummyEngine">DummyEngine</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="enginecontroller_8cpp_1a0" prot="public" static="no" volatile="no" mutable="no">
        <type><ref refid="classDummyEngine" kindref="compound">DummyEngine</ref></type>
        <definition> DummyEngine  dummyEngine</definition>
        <argsstring></argsstring>
        <name>dummyEngine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/kde_application/hdass08/src/enginecontroller.cpp" line="50"/>
        <referencedby refid="classEngineController_1EngineControllerd0" compoundref="enginecontroller_8cpp" startline="61" endline="75">EngineController::EngineController</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enginecontroller.cpp<sp/><sp/>-<sp/><sp/>Wraps<sp/>engine<sp/>and<sp/>adds<sp/>some<sp/>functionality</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------------------</highlight></codeline>
<codeline lineno="4"><highlight class="comment">begin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Mar<sp/>15<sp/>2004</highlight></codeline>
<codeline lineno="5"><highlight class="comment">copyright<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(C)<sp/>2004<sp/>by<sp/>Frederik<sp/>Holljen</highlight></codeline>
<codeline lineno="6"><highlight class="comment">email<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>fh@ez.no</highlight></codeline>
<codeline lineno="7"><highlight class="comment">***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by<sp/><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="enginecontroller_8h" kindref="compound">enginecontroller.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="enginebase_8h" kindref="compound">enginebase.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="amarokconfig_8h" kindref="compound">amarokconfig.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="metabundle_8h" kindref="compound">metabundle.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;titleproxy.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kdebug.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qtimer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kurl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classDummyEngine" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classDummyEngine" kindref="compound">DummyEngine</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classEngineBase" kindref="compound">EngineBase</ref></highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Does<sp/>nothing,<sp/>just<sp/>here<sp/>to<sp/>prevent<sp/>crashes<sp/>on<sp/>startup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//and<sp/>in<sp/>case<sp/>no<sp/>engines<sp/>are<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classDummyEngine_1DummyEngined0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDummyEngine_1DummyEngined0" kindref="member">init</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="34" refid="classDummyEngine_1DummyEngined1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDummyEngine_1DummyEngined1" kindref="member">initMixer</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="35" refid="classDummyEngine_1DummyEngined2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDummyEngine_1DummyEngined2" kindref="member">canDecode</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KURL&amp;,<sp/>mode_t,<sp/>mode_t<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="36" refid="classDummyEngine_1DummyEngined3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classDummyEngine_1DummyEngined3" kindref="member">length</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="37" refid="classDummyEngine_1DummyEngined4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classDummyEngine_1DummyEngined4" kindref="member">position</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="38" refid="classDummyEngine_1DummyEngined5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>EngineState<sp/><ref refid="classDummyEngine_1DummyEngined5" kindref="member">state</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EngineBase::Empty;<sp/>}</highlight></codeline>
<codeline lineno="39" refid="classDummyEngine_1DummyEngined6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDummyEngine_1DummyEngined6" kindref="member">isStream</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="40" refid="classDummyEngine_1DummyEngined7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDummyEngine_1DummyEngined8" kindref="member">play</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KURL&amp;<sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="41" refid="classDummyEngine_1DummyEngined8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDummyEngine_1DummyEngined8" kindref="member">play</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="42" refid="classDummyEngine_1DummyEngined9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDummyEngine_1DummyEngined9" kindref="member">stop</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="43" refid="classDummyEngine_1DummyEngined10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDummyEngine_1DummyEngined10" kindref="member">pause</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classDummyEngine_1DummyEngined11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDummyEngine_1DummyEngined11" kindref="member">seek</ref>(<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="46" refid="classDummyEngine_1DummyEngined12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDummyEngine_1DummyEngined12" kindref="member">setVolume</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v<sp/>)<sp/>{<sp/>m_volume<sp/>=<sp/>v;<sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classDummyEngine_1DummyEnginea0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/><ref refid="classDummyEngine_1DummyEnginea0" kindref="member">DummyEngine</ref>()<sp/>:<sp/><ref refid="classEngineBase" kindref="compound">EngineBase</ref>()<sp/>{<sp/>setName(<sp/></highlight><highlight class="stringliteral">&quot;Dummy&quot;</highlight><highlight class="normal"><sp/>);<sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">}<sp/><ref refid="enginecontroller_8cpp_1a0" kindref="member">dummyEngine</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classEngineController_1EngineControllere0" refkind="member"><highlight class="normal"><ref refid="classEngineController" kindref="compound">EngineController</ref><sp/>*<ref refid="classEngineController_1EngineControllere0" kindref="member">EngineController::instance</ref>()</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//will<sp/>only<sp/>be<sp/>instantiated<sp/>the<sp/>first<sp/>time<sp/>this<sp/>function<sp/>is<sp/>called</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classEngineController" kindref="compound">EngineController</ref><sp/>Instance;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;Instance;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classEngineController_1EngineControllerd0" refkind="member"><highlight class="normal"><ref refid="classEngineController_1EngineControllerd0" kindref="member">EngineController::EngineController</ref>()</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>use<sp/>the<sp/>dummy<sp/>Engine<sp/>to<sp/>ensure<sp/>we<sp/>always<sp/>have<sp/>an<sp/>engine<sp/>and<sp/>don&apos;t<sp/>have<sp/>to<sp/>test<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//m_pEngine<sp/>==<sp/>0<sp/>and<sp/>amaroK<sp/>is<sp/>in<sp/>a<sp/>safe<sp/>state<sp/>before<sp/>an<sp/>engine<sp/>is<sp/>loaded<sp/>on<sp/>startup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_pEngine(<sp/>&amp;<ref refid="enginecontroller_8cpp_1a0" kindref="member">dummyEngine</ref><sp/>)<sp/></highlight><highlight class="comment">//FIXME<sp/>better<sp/>would<sp/>be<sp/>a<sp/>static<sp/>member<sp/>or<sp/>something</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_proxyError(<sp/>false<sp/>)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_pMainTimer(<sp/>new<sp/>QTimer(<sp/>this<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_delayTime(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEngineController_1EngineControllerr0" kindref="member">m_pEngine</ref>-&gt;<ref refid="classEngineBase_1EngineBasei4" kindref="member">setVolume</ref>(<sp/>AmarokConfig::masterVolume()<sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<sp/><ref refid="classEngineController_1EngineControllerr3" kindref="member">m_pMainTimer</ref>,<sp/>SIGNAL(<sp/>timeout()<sp/>),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(<sp/><ref refid="classEngineController_1EngineControllerk0" kindref="member">slotMainTimer</ref>()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEngineController_1EngineControllerr3" kindref="member">m_pMainTimer</ref>-&gt;start(<sp/><ref refid="classEngineController_1EngineControllerv0" kindref="member">MAIN_TIMER</ref><sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classEngineController_1EngineControllera0" refkind="member"><highlight class="normal"><ref refid="classEngineController_1EngineControllera0" kindref="member">EngineController::~EngineController</ref>()</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal">kdDebug()<sp/>&lt;&lt;<sp/>k_funcinfo<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classEngineController_1EngineControlleri0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEngineController_1EngineControlleri0" kindref="member">EngineController::previous</ref>()</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classEngineController_1EngineControllerl1" kindref="member">orderPrevious</ref>();</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classEngineController_1EngineControlleri1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEngineController_1EngineControlleri1" kindref="member">EngineController::next</ref>()</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>kdDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EngineController-&gt;next&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classEngineController_1EngineControllerl0" kindref="member">orderNext</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="classEngineController_1EngineControlleri6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEngineController_1EngineControlleri6" kindref="member">EngineController::playPause</ref>()</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>//this<sp/>is<sp/>used<sp/>by<sp/>the<sp/>TrayIcon<sp/>and<sp/>PlayPauseAction</highlight></codeline>
<codeline lineno="101"><highlight class="comment"></highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/>if(<sp/>m_pEngine-&gt;state()<sp/>==<sp/>EngineBase::Playing<sp/>)</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pause();</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/>else<sp/>play();*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classEngineController_1EngineControlleri2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEngineController_1EngineControlleri2" kindref="member">EngineController::play</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classMetaBundle" kindref="compound">MetaBundle</ref><sp/>&amp;bundle)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal">qWarning(</highlight><highlight class="stringliteral">&quot;[EngineController::play]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classEngineController_1EngineControllerr0" kindref="member">m_pEngine</ref>-&gt;<ref refid="classEngineBase_1EngineBasea8" kindref="member">state</ref>()<sp/>==<sp/>EngineBase::Paused<sp/>)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEngineController_1EngineControllerr0" kindref="member">m_pEngine</ref>-&gt;<ref refid="classEngineBase_1EngineBasei0" kindref="member">play</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEngineSubject_1EngineSubjectb2" kindref="member">stateChangedNotify</ref>(<sp/>EngineBase::Playing<sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">qWarning(</highlight><highlight class="stringliteral">&quot;Pause-&gt;play&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="classEngineController_1EngineControllerr0" kindref="member">m_pEngine</ref>-&gt;<ref refid="classEngineBase_1EngineBasea8" kindref="member">state</ref>()<sp/>==<sp/>EngineBase::Playing<sp/>)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEngineController_1EngineControllere0" kindref="member">EngineController::instance</ref>()-&gt;<ref refid="classEngineController_1EngineControlleri4" kindref="member">pause</ref>();<sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal">qWarning(</highlight><highlight class="stringliteral">&quot;play-&gt;pause&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEngineController_1EngineControllere0" kindref="member">EngineController::instance</ref>()-&gt;<ref refid="classEngineController_1EngineControlleri2" kindref="member">play</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,bundle);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal">qWarning(</highlight><highlight class="stringliteral">&quot;other<sp/>situation&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/>orderCurrent();<sp/>//<sp/>keep<sp/>currenttrack<sp/>to<sp/>avoid<sp/>signal?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="classEngineController_1EngineControlleri3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEngineController_1EngineControlleri2" kindref="member">EngineController::play</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classMetaBundle" kindref="compound">MetaBundle</ref><sp/>&amp;bundle)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KURL<sp/>&amp;trackurl<sp/>=<sp/>bundle.<ref refid="classMetaBundle_1MetaBundlea9" kindref="member">url</ref>();<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kdDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[enginecontroller]SoundSystem:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>bundle.<ref refid="classMetaBundle_1MetaBundlea9" kindref="member">url</ref>()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEngineController_1EngineControllerr0" kindref="member">m_pEngine</ref>-&gt;<ref refid="classEngineBase_1EngineBasei0" kindref="member">play</ref>(<sp/>trackurl<sp/>);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>kdDebug()<sp/>&lt;&lt;<sp/>&quot;[engine]<sp/>It&apos;s<sp/>Playing:<sp/>&quot;<sp/>&lt;&lt;<sp/>bundle.track()<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEngineSubject_1EngineSubjectb2" kindref="member">stateChangedNotify</ref>(<sp/>EngineBase::Playing<sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEngineSubject_1EngineSubjectb3" kindref="member">newMetaDataNotify</ref>(<sp/>bundle,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>track<sp/>change<sp/>*/</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="classEngineController_1EngineControlleri4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEngineController_1EngineControlleri4" kindref="member">EngineController::pause</ref>()</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classEngineController_1EngineControllerr0" kindref="member">m_pEngine</ref>-&gt;<ref refid="classEngineBase_1EngineBasea9" kindref="member">loaded</ref>()<sp/>)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classEngineController_1EngineControllerr0" kindref="member">m_pEngine</ref>-&gt;<ref refid="classEngineBase_1EngineBasea8" kindref="member">state</ref>()<sp/>==<sp/>EngineBase::Paused<sp/>)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEngineController_1EngineControllerr0" kindref="member">m_pEngine</ref>-&gt;<ref refid="classEngineBase_1EngineBasei0" kindref="member">play</ref>();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEngineController_1EngineControllerr0" kindref="member">m_pEngine</ref>-&gt;<ref refid="classEngineBase_1EngineBasei3" kindref="member">pause</ref>();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEngineSubject_1EngineSubjectb2" kindref="member">stateChangedNotify</ref>(<sp/><ref refid="classEngineController_1EngineControllerr0" kindref="member">m_pEngine</ref>-&gt;<ref refid="classEngineBase_1EngineBasea8" kindref="member">state</ref>()<sp/>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="classEngineController_1EngineControlleri5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEngineController_1EngineControlleri5" kindref="member">EngineController::stop</ref>()</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>m_bundle<sp/>=<sp/>MetaBundle();<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEngineController_1EngineControllerr0" kindref="member">m_pEngine</ref>-&gt;<ref refid="classEngineBase_1EngineBasei2" kindref="member">stop</ref>();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEngineSubject_1EngineSubjectb2" kindref="member">stateChangedNotify</ref>(<sp/><ref refid="classEngineController_1EngineControllerr0" kindref="member">m_pEngine</ref>-&gt;<ref refid="classEngineBase_1EngineBasea8" kindref="member">state</ref>()<sp/>);<sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="classEngineController_1EngineControlleri7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classEngineController_1EngineControlleri7" kindref="member">EngineController::increaseVolume</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ticks<sp/>)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classEngineController_1EngineControlleri9" kindref="member">setVolume</ref>(<sp/><ref refid="classEngineController_1EngineControllerr0" kindref="member">m_pEngine</ref>-&gt;<ref refid="classEngineBase_1EngineBasea10" kindref="member">volume</ref>()<sp/>+<sp/>ticks<sp/>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="classEngineController_1EngineControlleri8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classEngineController_1EngineControlleri8" kindref="member">EngineController::decreaseVolume</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ticks<sp/>)</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classEngineController_1EngineControlleri9" kindref="member">setVolume</ref>(<sp/><ref refid="classEngineController_1EngineControllerr0" kindref="member">m_pEngine</ref>-&gt;<ref refid="classEngineBase_1EngineBasea10" kindref="member">volume</ref>()<sp/>-<sp/>ticks<sp/>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="classEngineController_1EngineControllere2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEngineController_1EngineControllere2" kindref="member">EngineController::setEngine</ref>(<sp/><ref refid="classEngineBase" kindref="compound">EngineBase</ref><sp/>*engine<sp/>)</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEngineController_1EngineControllere0" kindref="member">instance</ref>()-&gt;<ref refid="classEngineController_1EngineControllerr0" kindref="member">m_pEngine</ref><sp/>=<sp/>engine;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>kdDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[enginecontroller]engine:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>engine<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//NOTE<sp/>many<sp/>engine<sp/>properties<sp/>are<sp/>only<sp/>set<sp/>in<sp/>applySettings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="classEngineController_1EngineControlleri9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classEngineController_1EngineControlleri9" kindref="member">EngineController::setVolume</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>percent<sp/>)</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>percent<sp/>&lt;<sp/>0<sp/>)<sp/>percent<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//can&apos;t<sp/>make<sp/>uint<sp/>as<sp/>all<sp/>signals<sp/>use<sp/>int<sp/>and<sp/>slot<sp/>has<sp/>to<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>percent<sp/>&gt;<sp/>100<sp/>)<sp/>percent<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>percent<sp/>!=<sp/><ref refid="classEngineController_1EngineControllerr0" kindref="member">m_pEngine</ref>-&gt;<ref refid="classEngineBase_1EngineBasea10" kindref="member">volume</ref>()<sp/>)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAmarokConfig_1AmarokConfige51" kindref="member">AmarokConfig::setMasterVolume</ref>(<sp/>percent<sp/>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEngineController_1EngineControllerr0" kindref="member">m_pEngine</ref>-&gt;<ref refid="classEngineBase_1EngineBasei4" kindref="member">setVolume</ref>(<sp/>percent<sp/>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEngineSubject_1EngineSubjectb4" kindref="member">volumeChangedNotify</ref>(<sp/>percent<sp/>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classEngineController_1EngineControllerr0" kindref="member">m_pEngine</ref>-&gt;<ref refid="classEngineBase_1EngineBasea10" kindref="member">volume</ref>();</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="classEngineController_1EngineControllerk1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEngineController_1EngineControllerk1" kindref="member">EngineController::newMetaData</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classMetaBundle" kindref="compound">MetaBundle</ref><sp/>&amp;bundle<sp/>)</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>m_bundle<sp/>=<sp/>bundle;</highlight></codeline>
<codeline lineno="214"><highlight class="comment"></highlight></codeline>
<codeline lineno="215"><highlight class="comment">//<sp/><sp/><sp/><sp/>newMetaDataNotify(<sp/>m_bundle,<sp/>false<sp/><sp/>);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="classEngineController_1EngineControllerk0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEngineController_1EngineControllerk0" kindref="member">EngineController::slotMainTimer</ref>()</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="classEngineController_1EngineControllerr0" kindref="member">m_pEngine</ref>-&gt;<ref refid="classEngineBase_1EngineBasea8" kindref="member">state</ref>()<sp/>==<sp/>EngineBase::Empty<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>position<sp/>=<sp/><ref refid="classEngineController_1EngineControllerr0" kindref="member">m_pEngine</ref>-&gt;<ref refid="classEngineBase_1EngineBasea7" kindref="member">position</ref>();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>length<sp/><sp/><sp/>=<sp/><ref refid="classEngineController_1EngineControllerr1" kindref="member">m_bundle</ref>.<ref refid="classMetaBundle_1MetaBundlea5" kindref="member">length</ref>()<sp/>*<sp/>1000;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEngineSubject_1EngineSubjectb5" kindref="member">trackPositionChangedNotify</ref>(<sp/>position<sp/>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>track<sp/>has<sp/>ended<sp/>or<sp/>is<sp/>broken</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classEngineController_1EngineControllerr0" kindref="member">m_pEngine</ref>-&gt;<ref refid="classEngineBase_1EngineBasea8" kindref="member">state</ref>()<sp/>==<sp/>EngineBase::Idle<sp/>)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kdDebug()<sp/>&lt;&lt;<sp/>k_funcinfo<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Idle<sp/>detected.<sp/>Skipping<sp/>track.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classAmarokConfig_1AmarokConfige34" kindref="member">AmarokConfig::trackDelayLength</ref>()<sp/>&gt;<sp/>0<sp/>)<sp/></highlight><highlight class="comment">//this<sp/>can<sp/>occur<sp/>syncronously<sp/>to<sp/>XFade<sp/>and<sp/>not<sp/>be<sp/>fatal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//delay<sp/>before<sp/>start<sp/>of<sp/>next<sp/>track,<sp/>without<sp/>freezing<sp/>the<sp/>app</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEngineController_1EngineControllerr4" kindref="member">m_delayTime</ref><sp/>+=<sp/><ref refid="classEngineController_1EngineControllerv0" kindref="member">MAIN_TIMER</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classEngineController_1EngineControllerr4" kindref="member">m_delayTime</ref><sp/>&gt;=<sp/><ref refid="classAmarokConfig_1AmarokConfige34" kindref="member">AmarokConfig::trackDelayLength</ref>()<sp/>)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEngineController_1EngineControllerr4" kindref="member">m_delayTime</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEngineController_1EngineControlleri1" kindref="member">next</ref>();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEngineController_1EngineControlleri1" kindref="member">next</ref>();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Crossfading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/><ref refid="classAmarokConfig_1AmarokConfige56" kindref="member">AmarokConfig::crossfade</ref>()<sp/>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/><ref refid="classEngineController_1EngineControllerr0" kindref="member">m_pEngine</ref>-&gt;<ref refid="classEngineBase_1EngineBasea13" kindref="member">supportsXFade</ref>()<sp/>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>!<ref refid="classEngineController_1EngineControllerr0" kindref="member">m_pEngine</ref>-&gt;<ref refid="classEngineBase_1EngineBasea12" kindref="member">isStream</ref>()<sp/>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>length<sp/>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>length<sp/>-<sp/>position<sp/>&lt;<sp/>(uint)<ref refid="classAmarokConfig_1AmarokConfige58" kindref="member">AmarokConfig::crossfadeLength</ref>()<sp/>)<sp/><sp/>)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kdDebug()<sp/>&lt;&lt;<sp/>k_funcinfo<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Crossfading<sp/>to<sp/>next<sp/>track.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEngineController_1EngineControlleri1" kindref="member">next</ref>();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classEngineController_1EngineControllerl3" kindref="member">TrackPosition</ref>(position/1000);</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="enginecontroller_8moc" kindref="compound">enginecontroller.moc</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/root/kde_application/hdass08/src/enginecontroller.cpp"/>
  </compounddef>
</doxygen>
