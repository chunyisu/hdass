<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.3.6">
  <compounddef id="artsengine_8cpp" kind="file">
    <compoundname>artsengine.cpp</compoundname>
    <includes refid="amarokarts_8h" local="yes">amarokarts.h</includes>
    <includes refid="artsengine_8h" local="yes">artsengine.h</includes>
    <includes refid="enginebase_8h" local="yes">enginebase.h</includes>
    <includes refid="engineobserver_8h" local="yes">engineobserver.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">qdir.h</includes>
    <includes local="no">qdom.h</includes>
    <includes local="no">qfile.h</includes>
    <includes local="no">qlayout.h</includes>
    <includes local="no">qstring.h</includes>
    <includes local="no">qtextstream.h</includes>
    <includes local="no">qtimer.h</includes>
    <includes local="no">kapplication.h</includes>
    <includes local="no">arts/kartswidget.h</includes>
    <includes local="no">kconfig.h</includes>
    <includes local="no">kdebug.h</includes>
    <includes local="no">kfileitem.h</includes>
    <includes local="no">kgenericfactory.h</includes>
    <includes local="no">klocale.h</includes>
    <includes local="no">kmessagebox.h</includes>
    <includes local="no">kmimetype.h</includes>
    <includes local="no">kstandarddirs.h</includes>
    <includes local="no">kurl.h</includes>
    <includes local="no">arts/artsflow.h</includes>
    <includes local="no">arts/artsgui.h</includes>
    <includes local="no">arts/artskde.h</includes>
    <includes local="no">arts/artsmodules.h</includes>
    <includes local="no">arts/connect.h</includes>
    <includes local="no">arts/dynamicrequest.h</includes>
    <includes local="no">arts/flowsystem.h</includes>
    <includes local="no">arts/kartsdispatcher.h</includes>
    <includes local="no">arts/kmedia2.h</includes>
    <includes local="no">arts/kplayobjectfactory.h</includes>
    <includes local="no">arts/soundserver.h</includes>
    <includes local="no">sys/wait.h</includes>
    <includes refid="artsengine_8moc" local="yes">artsengine.moc</includes>
    <incdepgraph>
      <node id="2545">
        <label>amarokarts.h</label>
        <link refid="amarokarts_8h"/>
        <childnode refid="2546" relation="include">
        </childnode>
        <childnode refid="2547" relation="include">
        </childnode>
        <childnode refid="2548" relation="include">
        </childnode>
      </node>
      <node id="2570">
        <label>qtimer.h</label>
      </node>
      <node id="2546">
        <label>arts/common.h</label>
      </node>
      <node id="2547">
        <label>arts/artsflow.h</label>
      </node>
      <node id="2594">
        <label>private/qucomextra_p.h</label>
      </node>
      <node id="2566">
        <label>qfile.h</label>
      </node>
      <node id="2561">
        <label>assert.h</label>
      </node>
      <node id="2568">
        <label>qstring.h</label>
      </node>
      <node id="2550">
        <label>enginebase.h</label>
        <link refid="enginebase_8h"/>
        <childnode refid="2551" relation="include">
        </childnode>
        <childnode refid="2552" relation="include">
        </childnode>
        <childnode refid="2553" relation="include">
        </childnode>
      </node>
      <node id="2552">
        <label>qobject.h</label>
      </node>
      <node id="2581">
        <label>kurl.h</label>
      </node>
      <node id="2586">
        <label>arts/flowsystem.h</label>
      </node>
      <node id="2574">
        <label>kdebug.h</label>
      </node>
      <node id="2583">
        <label>arts/artsmodules.h</label>
      </node>
      <node id="2563">
        <label>string</label>
      </node>
      <node id="2576">
        <label>kgenericfactory.h</label>
      </node>
      <node id="2585">
        <label>arts/dynamicrequest.h</label>
      </node>
      <node id="2560">
        <label>qptrlist.h</label>
      </node>
      <node id="2584">
        <label>arts/connect.h</label>
      </node>
      <node id="2564">
        <label>qdir.h</label>
      </node>
      <node id="2575">
        <label>kfileitem.h</label>
      </node>
      <node id="2567">
        <label>qlayout.h</label>
      </node>
      <node id="2593">
        <label>qapplication.h</label>
      </node>
      <node id="2577">
        <label>klocale.h</label>
      </node>
      <node id="2571">
        <label>kapplication.h</label>
      </node>
      <node id="2565">
        <label>qdom.h</label>
      </node>
      <node id="2591">
        <label>artsengine.moc</label>
        <link refid="artsengine_8moc"/>
        <childnode refid="2549" relation="include">
        </childnode>
        <childnode refid="2592" relation="include">
        </childnode>
        <childnode refid="2593" relation="include">
        </childnode>
        <childnode refid="2594" relation="include">
        </childnode>
      </node>
      <node id="2544">
        <label>artsengine.cpp</label>
        <link refid="artsengine.cpp"/>
        <childnode refid="2545" relation="include">
        </childnode>
        <childnode refid="2549" relation="include">
        </childnode>
        <childnode refid="2550" relation="include">
        </childnode>
        <childnode refid="2559" relation="include">
        </childnode>
        <childnode refid="2561" relation="include">
        </childnode>
        <childnode refid="2562" relation="include">
        </childnode>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2551" relation="include">
        </childnode>
        <childnode refid="2564" relation="include">
        </childnode>
        <childnode refid="2565" relation="include">
        </childnode>
        <childnode refid="2566" relation="include">
        </childnode>
        <childnode refid="2567" relation="include">
        </childnode>
        <childnode refid="2568" relation="include">
        </childnode>
        <childnode refid="2569" relation="include">
        </childnode>
        <childnode refid="2570" relation="include">
        </childnode>
        <childnode refid="2571" relation="include">
        </childnode>
        <childnode refid="2572" relation="include">
        </childnode>
        <childnode refid="2573" relation="include">
        </childnode>
        <childnode refid="2574" relation="include">
        </childnode>
        <childnode refid="2575" relation="include">
        </childnode>
        <childnode refid="2576" relation="include">
        </childnode>
        <childnode refid="2577" relation="include">
        </childnode>
        <childnode refid="2578" relation="include">
        </childnode>
        <childnode refid="2579" relation="include">
        </childnode>
        <childnode refid="2580" relation="include">
        </childnode>
        <childnode refid="2581" relation="include">
        </childnode>
        <childnode refid="2547" relation="include">
        </childnode>
        <childnode refid="2557" relation="include">
        </childnode>
        <childnode refid="2582" relation="include">
        </childnode>
        <childnode refid="2583" relation="include">
        </childnode>
        <childnode refid="2584" relation="include">
        </childnode>
        <childnode refid="2585" relation="include">
        </childnode>
        <childnode refid="2586" relation="include">
        </childnode>
        <childnode refid="2587" relation="include">
        </childnode>
        <childnode refid="2588" relation="include">
        </childnode>
        <childnode refid="2589" relation="include">
        </childnode>
        <childnode refid="2558" relation="include">
        </childnode>
        <childnode refid="2590" relation="include">
        </childnode>
        <childnode refid="2591" relation="include">
        </childnode>
      </node>
      <node id="2549">
        <label>artsengine.h</label>
        <link refid="artsengine_8h"/>
        <childnode refid="2545" relation="include">
        </childnode>
        <childnode refid="2550" relation="include">
        </childnode>
        <childnode refid="2551" relation="include">
        </childnode>
        <childnode refid="2554" relation="include">
        </childnode>
        <childnode refid="2555" relation="include">
        </childnode>
        <childnode refid="2553" relation="include">
        </childnode>
        <childnode refid="2556" relation="include">
        </childnode>
        <childnode refid="2557" relation="include">
        </childnode>
        <childnode refid="2558" relation="include">
        </childnode>
      </node>
      <node id="2558">
        <label>arts/soundserver.h</label>
      </node>
      <node id="2588">
        <label>arts/kmedia2.h</label>
      </node>
      <node id="2589">
        <label>arts/kplayobjectfactory.h</label>
      </node>
      <node id="2551">
        <label>vector</label>
      </node>
      <node id="2587">
        <label>arts/kartsdispatcher.h</label>
      </node>
      <node id="2559">
        <label>engineobserver.h</label>
        <link refid="engineobserver_8h"/>
        <childnode refid="2550" relation="include">
        </childnode>
        <childnode refid="2560" relation="include">
        </childnode>
      </node>
      <node id="2557">
        <label>arts/artsgui.h</label>
      </node>
      <node id="2569">
        <label>qtextstream.h</label>
      </node>
      <node id="2573">
        <label>kconfig.h</label>
      </node>
      <node id="2562">
        <label>math.h</label>
      </node>
      <node id="2590">
        <label>sys/wait.h</label>
      </node>
      <node id="2556">
        <label>qwidget.h</label>
      </node>
      <node id="2592">
        <label>qmetaobject.h</label>
      </node>
      <node id="2578">
        <label>kmessagebox.h</label>
      </node>
      <node id="2580">
        <label>kstandarddirs.h</label>
      </node>
      <node id="2579">
        <label>kmimetype.h</label>
      </node>
      <node id="2572">
        <label>arts/kartswidget.h</label>
      </node>
      <node id="2555">
        <label>qmap.h</label>
      </node>
      <node id="2553">
        <label>qstringlist.h</label>
      </node>
      <node id="2554">
        <label>qguardedptr.h</label>
      </node>
      <node id="2582">
        <label>arts/artskde.h</label>
      </node>
      <node id="2548">
        <label>arts/reference.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>artsengine.cpp<sp/><sp/>-<sp/><sp/>aRts<sp/>audio<sp/>interface</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------------------</highlight></codeline>
<codeline lineno="4"><highlight class="comment">begin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Dec<sp/>31<sp/>2003</highlight></codeline>
<codeline lineno="5"><highlight class="comment">copyright<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(C)<sp/>2003<sp/>by<sp/>Mark<sp/>Kretschmann</highlight></codeline>
<codeline lineno="6"><highlight class="comment">email<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>markey@web.de</highlight></codeline>
<codeline lineno="7"><highlight class="comment">***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by<sp/><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="amarokarts_8h" kindref="compound">amarokarts.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="artsengine_8h" kindref="compound">artsengine.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="enginebase_8h" kindref="compound">enginebase.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="engineobserver_8h" kindref="compound">engineobserver.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//setVolume(),<sp/>timerEvent()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qdir.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qdom.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qfile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qlayout.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qstring.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qtextstream.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qtimer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kapplication.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arts/kartswidget.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kconfig.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kdebug.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kfileitem.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kgenericfactory.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;klocale.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kmessagebox.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kmimetype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kstandarddirs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kurl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arts/artsflow.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arts/artsgui.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arts/artskde.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arts/artsmodules.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arts/connect.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arts/dynamicrequest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arts/flowsystem.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arts/kartsdispatcher.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arts/kmedia2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arts/kplayobjectfactory.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arts/soundserver.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/wait.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//AMAROK_EXPORT_PLUGIN(<sp/>ArtsEngine<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classArtsEngine_1ArtsEnginea0" refkind="member"><highlight class="normal"><ref refid="classArtsEngine_1ArtsEnginea0" kindref="member">ArtsEngine::ArtsEngine</ref>(<sp/>)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classEngineBase" kindref="compound">EngineBase</ref>()</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>m_pArtsDispatcher(<sp/>new<sp/>KArtsDispatcher(<sp/>this<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>m_pPlayObject(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>m_pPlayObjectXfade(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>m_scopeId(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>m_volumeId(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>m_xfadeFadeout(<sp/>false<sp/>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>m_xfadeValue(<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>m_xfadeCurrent(<sp/>&quot;invalue2&quot;<sp/>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>m_pConnectTimer(<sp/>new<sp/>QTimer(<sp/>this<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>kdDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Engine<sp/>is<sp/>ready&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>k_funcinfo<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classArtsEngine_1ArtsEnginea1" refkind="member"><highlight class="normal"><ref refid="classArtsEngine_1ArtsEnginea1" kindref="member">ArtsEngine::~ ArtsEngine</ref>()</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>kdDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;BEGIN<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>k_funcinfo<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer18" kindref="member">m_pConnectTimer</ref>-&gt;stop();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>killTimers();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginer2" kindref="member">m_pPlayObjectXfade</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEngined3" kindref="member">saveEffects</ref>();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer3" kindref="member">m_server</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Arts::SoundServerV2::null();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer8" kindref="member">m_scope</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classAmarok_1_1RawScope_1Amarok_1_1RawScopee0" kindref="member">Amarok::RawScope::null</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer9" kindref="member">m_xfade</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classAmarok_1_1Synth__STEREO__XFADE_1Amarok_1_1Synth__STEREO__XFADEe0" kindref="member">Amarok::Synth_STEREO_XFADE::null</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer6" kindref="member">m_volumeControl</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>Arts::StereoVolumeControl::null();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer5" kindref="member">m_effectStack</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Arts::StereoEffectStack::null();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer4" kindref="member">m_globalEffectStack</ref><sp/>=<sp/>Arts::StereoEffectStack::null();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer7" kindref="member">m_amanPlay</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Arts::Synth_AMAN_PLAY::null();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>kdDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;END<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>k_funcinfo<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classArtsEngine_1ArtsEnginea2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginea2" kindref="member">ArtsEngine::init</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>restart,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scopeSize,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>restoreEffects<sp/>)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>kdDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;BEGIN<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>k_funcinfo<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer11" kindref="member">m_scopeSize</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>scopeSize;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>m_restoreEffects<sp/>=<sp/>restoreEffects;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>m_mixerHW<sp/>=<sp/>-1;<sp/><sp/><sp/></highlight><highlight class="comment">//initialize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>must<sp/>restart<sp/>artsd<sp/>whenever<sp/>we<sp/>installed<sp/>new<sp/>mcopclasses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>restart<sp/>)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>kill_cmdline;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kill_cmdline<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;killall<sp/>artsd&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kill_status<sp/>=<sp/>::system(<sp/>kill_cmdline<sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>kill_status<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>WIFEXITED(<sp/>kill_status<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kdWarning()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;killall<sp/>artsd<sp/>succeeded.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restart<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>KConfig<sp/>config(<sp/></highlight><highlight class="stringliteral">&quot;kcmartsrc&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>config.setGroup(<sp/></highlight><highlight class="stringliteral">&quot;Arts&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>realtime<sp/>=<sp/>config.readBoolEntry(<sp/></highlight><highlight class="stringliteral">&quot;StartRealtime&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!realtime<sp/>)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KMessageBox::information(<sp/>0,<sp/>i18n(<sp/></highlight><highlight class="stringliteral">&quot;&lt;p&gt;artsd<sp/>is<sp/>not<sp/>running<sp/>with<sp/>&lt;b&gt;realtime<sp/>priority&lt;/b&gt;<sp/>which<sp/>may<sp/>cause<sp/>audio<sp/>playback<sp/>to<sp/>\&quot;skip\&quot;<sp/>and<sp/>stutter.&lt;p&gt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;p&gt;To<sp/>use<sp/>realtime<sp/>priority,<sp/>open<sp/>the<sp/>KDE<sp/>Control<sp/>Center<sp/>and<sp/>enable<sp/>\&quot;Run<sp/>with<sp/>highest<sp/>possible<sp/>priority\&quot;,<sp/>under<sp/>&lt;i&gt;Sound<sp/>System&lt;/i&gt;<sp/>in<sp/>the<sp/>&lt;i&gt;Sound<sp/>&amp;<sp/>Multimedia&lt;/i&gt;<sp/>branch.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Some<sp/>people<sp/>may<sp/>also<sp/>have<sp/>to<sp/>check<sp/>that<sp/>\&quot;$KDEDIR/bin/artswrapper\&quot;<sp/>is<sp/>&lt;b&gt;set<sp/>suid&lt;/b&gt;<sp/>(chmod<sp/>+s).&lt;/p&gt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;p&gt;You<sp/>may<sp/>find,<sp/>however,<sp/>that<sp/>playback<sp/>is<sp/>fine<sp/>without<sp/>increasing<sp/>the<sp/>priority<sp/>of<sp/>artsd.&lt;/p&gt;&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i18n(<sp/></highlight><highlight class="stringliteral">&quot;aRts<sp/>Problem&quot;</highlight><highlight class="normal"><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;artsRealtimeAdvice&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer3" kindref="member">m_server</ref><sp/>=<sp/>Arts::Reference(<sp/></highlight><highlight class="stringliteral">&quot;global:Arts_SoundServerV2&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer3" kindref="member">m_server</ref>.isNull()<sp/>||<sp/><ref refid="classArtsEngine_1ArtsEnginer3" kindref="member">m_server</ref>.error()<sp/>)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kdWarning()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;aRtsd<sp/>not<sp/>running..<sp/>trying<sp/>to<sp/>start&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>aRts<sp/>seems<sp/>not<sp/>to<sp/>be<sp/>running,<sp/>let&apos;s<sp/>try<sp/>to<sp/>run<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First,<sp/>let&apos;s<sp/>read<sp/>the<sp/>configuration<sp/>as<sp/>in<sp/>kcmarts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>cmdline;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>x11Comm<sp/>=<sp/>config.readBoolEntry(<sp/></highlight><highlight class="stringliteral">&quot;X11GlobalComm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>put<sp/>the<sp/>value<sp/>of<sp/>x11Comm<sp/>into<sp/>.mcoprc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KConfig<sp/>X11CommConfig(<sp/>QDir::homeDirPath()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/.mcoprc&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x11Comm<sp/>)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X11CommConfig.writeEntry(<sp/></highlight><highlight class="stringliteral">&quot;GlobalComm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Arts::X11GlobalComm&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X11CommConfig.writeEntry(<sp/></highlight><highlight class="stringliteral">&quot;GlobalComm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Arts::TmpGlobalComm&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X11CommConfig.sync();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmdline<sp/>=<sp/>QFile::encodeName(<sp/>KStandardDirs::findExe(<sp/>QString::fromLatin1(<sp/></highlight><highlight class="stringliteral">&quot;kdeinit_wrapper&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmdline<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>realtime<sp/>)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmdline<sp/>+=<sp/>QFile::encodeName(<sp/>KStandardDirs::findExe(</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString::fromLatin1(<sp/></highlight><highlight class="stringliteral">&quot;artswrapper&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmdline<sp/>+=<sp/>QFile::encodeName(<sp/>KStandardDirs::findExe(</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString::fromLatin1(<sp/></highlight><highlight class="stringliteral">&quot;artsd&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmdline<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmdline<sp/>+=<sp/>config.readEntry(<sp/></highlight><highlight class="stringliteral">&quot;Arguments&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-F<sp/>10<sp/>-S<sp/>4096<sp/>-s<sp/>60<sp/>-m<sp/>artsmessage<sp/>-l<sp/>3<sp/>-f<sp/>-n&quot;</highlight><highlight class="normal"><sp/>).utf8();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>::system(<sp/>cmdline<sp/>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>WIFEXITED(<sp/>status<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>could<sp/>have<sp/>a<sp/>race-condition<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>correct<sp/>way<sp/>to<sp/>do<sp/>it<sp/>is<sp/>to<sp/>make<sp/>artsd<sp/>fork-and-exit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>after<sp/>starting<sp/>to<sp/>listen<sp/>to<sp/>connections<sp/>(and<sp/>running<sp/>artsd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>directly<sp/>instead<sp/>of<sp/>using<sp/>kdeinit),<sp/>but<sp/>this<sp/>is<sp/>better</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>than<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>every<sp/>time<sp/>it<sp/>fails,<sp/>we<sp/>should<sp/>wait<sp/>a<sp/>little<sp/>longer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>between<sp/>tries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::sleep(<sp/>1<sp/>+<sp/>time<sp/>/<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer3" kindref="member">m_server</ref><sp/>=<sp/>Arts::Reference(<sp/></highlight><highlight class="stringliteral">&quot;global:Arts_SoundServerV2&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>++time<sp/>&lt;<sp/>5<sp/>&amp;&amp;<sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer3" kindref="member">m_server</ref>.isNull()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer3" kindref="member">m_server</ref>.isNull()<sp/>)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KMessageBox::error(<sp/>0,<sp/>i18n(<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>start<sp/>aRts.<sp/>Exiting.&quot;</highlight><highlight class="normal"><sp/>),<sp/>i18n(<sp/></highlight><highlight class="stringliteral">&quot;Fatal<sp/>Error&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::exit(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//amanPlay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer7" kindref="member">m_amanPlay</ref><sp/>=<sp/>Arts::DynamicCast(<sp/><ref refid="classArtsEngine_1ArtsEnginer3" kindref="member">m_server</ref>.createObject(<sp/></highlight><highlight class="stringliteral">&quot;Arts::Synth_AMAN_PLAY&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer7" kindref="member">m_amanPlay</ref>.title(<sp/></highlight><highlight class="stringliteral">&quot;amarok&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer7" kindref="member">m_amanPlay</ref>.autoRestoreID(<sp/></highlight><highlight class="stringliteral">&quot;amarok&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer7" kindref="member">m_amanPlay</ref>.start();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//Xfade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer9" kindref="member">m_xfade</ref><sp/>=<sp/>Arts::DynamicCast(<sp/><ref refid="classArtsEngine_1ArtsEnginer3" kindref="member">m_server</ref>.createObject(<sp/></highlight><highlight class="stringliteral">&quot;Amarok::Synth_STEREO_XFADE&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer9" kindref="member">m_xfade</ref>.isNull()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KMessageBox::error(<sp/>0,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i18n(<sp/></highlight><highlight class="stringliteral">&quot;&lt;p&gt;There<sp/>was<sp/>an<sp/>error<sp/>loading<sp/>libamarokarts.<sp/>First<sp/>try:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;pre&gt;killall<sp/>-9<sp/>artsd<sp/>&amp;&amp;<sp/>amarok&lt;/pre&gt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;If<sp/>that<sp/>does<sp/>not<sp/>work<sp/>then<sp/>amaroK<sp/>was<sp/>probably<sp/>installed<sp/>with<sp/>the<sp/>wrong<sp/>prefix;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;please<sp/>re-configure<sp/>amaroK<sp/>using:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;pre&gt;./configure<sp/>--prefix=`kde-config<sp/>--prefix`<sp/>&amp;&amp;<sp/>su<sp/>-c<sp/>\&quot;make<sp/>install\&quot;&lt;/pre&gt;&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i18n(<sp/></highlight><highlight class="stringliteral">&quot;Fatal<sp/>Error&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::exit(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer9" kindref="member">m_xfade</ref>.<ref refid="classAmarok_1_1Synth__STEREO__XFADE_1Amarok_1_1Synth__STEREO__XFADEa15" kindref="member">percentage</ref>(<sp/><ref refid="classArtsEngine_1ArtsEnginer15" kindref="member">m_xfadeValue</ref><sp/>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer9" kindref="member">m_xfade</ref>.<ref refid="classAmarok_1_1Synth__STEREO__XFADE_1Amarok_1_1Synth__STEREO__XFADEa10" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//globalEffectStack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer4" kindref="member">m_globalEffectStack</ref><sp/>=<sp/>Arts::DynamicCast(<sp/><ref refid="classArtsEngine_1ArtsEnginer3" kindref="member">m_server</ref>.createObject(<sp/></highlight><highlight class="stringliteral">&quot;Arts::StereoEffectStack&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer4" kindref="member">m_globalEffectStack</ref>.start();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//effectStack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer5" kindref="member">m_effectStack</ref><sp/>=<sp/>Arts::DynamicCast(<sp/><ref refid="classArtsEngine_1ArtsEnginer3" kindref="member">m_server</ref>.createObject(<sp/></highlight><highlight class="stringliteral">&quot;Arts::StereoEffectStack&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer5" kindref="member">m_effectStack</ref>.start();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer4" kindref="member">m_globalEffectStack</ref>.insertBottom(<sp/><ref refid="classArtsEngine_1ArtsEnginer5" kindref="member">m_effectStack</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Effect<sp/>Stack&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//scope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer8" kindref="member">m_scope</ref><sp/>=<sp/>Arts::DynamicCast(<sp/><ref refid="classArtsEngine_1ArtsEnginer3" kindref="member">m_server</ref>.createObject(<sp/></highlight><highlight class="stringliteral">&quot;Amarok::RawScope&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer8" kindref="member">m_scope</ref>.<ref refid="classAmarok_1_1RawScope_1Amarok_1_1RawScopea11" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer8" kindref="member">m_scope</ref>.<ref refid="classAmarok_1_1RawScope_1Amarok_1_1RawScopea16" kindref="member">buffer</ref>(<sp/><ref refid="classArtsEngine_1ArtsEnginer11" kindref="member">m_scopeSize</ref><sp/>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer10" kindref="member">m_scopeId</ref><sp/>=<sp/><ref refid="classArtsEngine_1ArtsEnginer4" kindref="member">m_globalEffectStack</ref>.insertTop(<sp/><ref refid="classArtsEngine_1ArtsEnginer8" kindref="member">m_scope</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Analyzer&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>Arts::connect(<sp/><ref refid="classArtsEngine_1ArtsEnginer4" kindref="member">m_globalEffectStack</ref><sp/><sp/>,<sp/><ref refid="classArtsEngine_1ArtsEnginer7" kindref="member">m_amanPlay</ref><sp/>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>Arts::connect(<sp/><ref refid="classArtsEngine_1ArtsEnginer9" kindref="member">m_xfade</ref>,<sp/></highlight><highlight class="stringliteral">&quot;outvalue_l&quot;</highlight><highlight class="normal">,<sp/><ref refid="classArtsEngine_1ArtsEnginer4" kindref="member">m_globalEffectStack</ref>,<sp/></highlight><highlight class="stringliteral">&quot;inleft&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>Arts::connect(<sp/><ref refid="classArtsEngine_1ArtsEnginer9" kindref="member">m_xfade</ref>,<sp/></highlight><highlight class="stringliteral">&quot;outvalue_r&quot;</highlight><highlight class="normal">,<sp/><ref refid="classArtsEngine_1ArtsEnginer4" kindref="member">m_globalEffectStack</ref>,<sp/></highlight><highlight class="stringliteral">&quot;inright&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_restoreEffects<sp/>)<sp/><ref refid="classArtsEngine_1ArtsEngined2" kindref="member">loadEffects</ref>();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>startTimer(<sp/><ref refid="classArtsEngine_1ArtsEnginev0" kindref="member">ARTS_TIMER</ref><sp/>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<sp/><ref refid="classArtsEngine_1ArtsEnginer18" kindref="member">m_pConnectTimer</ref>,<sp/>SIGNAL(<sp/>timeout()<sp/>),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(<sp/><ref refid="classArtsEngine_1ArtsEnginek1" kindref="member">connectTimeout</ref>()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>kdDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;END<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>k_funcinfo<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="classArtsEngine_1ArtsEnginea3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginea3" kindref="member">ArtsEngine::initMixer</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hardware<sp/>)</highlight></codeline>
<codeline lineno="258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//make<sp/>sure<sp/>any<sp/>previously<sp/>started<sp/>volume<sp/>control<sp/>gets<sp/>killed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer12" kindref="member">m_volumeId</ref><sp/>)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer4" kindref="member">m_globalEffectStack</ref>.remove(<sp/><ref refid="classArtsEngine_1ArtsEnginer12" kindref="member">m_volumeId</ref><sp/>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer12" kindref="member">m_volumeId</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer6" kindref="member">m_volumeControl</ref><sp/>=<sp/>Arts::StereoVolumeControl::null();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEngineBase_1EngineBaseb0" kindref="member">closeMixerHW</ref>();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hardware<sp/>)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hardware<sp/>=<sp/><ref refid="classEngineBase_1EngineBaseb1" kindref="member">initMixerHW</ref>();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer6" kindref="member">m_volumeControl</ref><sp/>=<sp/>Arts::DynamicCast(<sp/><ref refid="classArtsEngine_1ArtsEnginer3" kindref="member">m_server</ref>.createObject(<sp/></highlight><highlight class="stringliteral">&quot;Arts::StereoVolumeControl&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer6" kindref="member">m_volumeControl</ref>.start();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer12" kindref="member">m_volumeId</ref><sp/>=<sp/><ref refid="classArtsEngine_1ArtsEnginer4" kindref="member">m_globalEffectStack</ref>.insertBottom(<sp/><ref refid="classArtsEngine_1ArtsEnginer6" kindref="member">m_volumeControl</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Volume<sp/>Control&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hardware;</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="comment">//<sp/>PUBLIC<sp/>METHODS</highlight></codeline>
<codeline lineno="283"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="classArtsEngine_1ArtsEnginea4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginea4" kindref="member">ArtsEngine::canDecode</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KURL<sp/>&amp;url,<sp/>mode_t<sp/>mode,<sp/>mode_t<sp/>permissions<sp/>)</highlight></codeline>
<codeline lineno="285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>KFileItem<sp/>fileItem(<sp/>mode,<sp/>permissions,<sp/>url,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);<sp/></highlight><highlight class="comment">//false<sp/>=<sp/>determineMimeType<sp/>straight<sp/>away</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>KMimeType::Ptr<sp/>mimetype<sp/>=<sp/>fileItem.determineMimeType();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>Arts::TraderQuery<sp/>query;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>query.supports(<sp/></highlight><highlight class="stringliteral">&quot;Interface&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Arts::PlayObject&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>query.supports(<sp/></highlight><highlight class="stringliteral">&quot;MimeType&quot;</highlight><highlight class="normal">,<sp/>mimetype-&gt;name().latin1()<sp/>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Arts::TraderOffer&gt;<sp/>*offers<sp/>=<sp/>query.query();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>!offers-&gt;empty();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>offers;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="classArtsEngine_1ArtsEnginea6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginea6" kindref="member">ArtsEngine::position</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="302"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref><sp/>)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref>-&gt;currentTime().seconds<sp/>*<sp/>1000<sp/>+</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref>-&gt;currentTime().ms;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="classArtsEngine_1ArtsEnginea7" refkind="member"><highlight class="normal">EngineBase::EngineState<sp/><ref refid="classArtsEngine_1ArtsEnginea7" kindref="member">ArtsEngine::state</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="312"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref><sp/>&amp;&amp;<sp/>!<ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref>-&gt;isNull()<sp/>)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref>-&gt;object().isNull()<sp/>)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Playing;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref>-&gt;state()<sp/>)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Arts::posPaused:</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Paused;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Arts::posPlaying:</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Playing;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Arts::posIdle:</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Idle;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EngineBase::Empty;</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="classArtsEngine_1ArtsEnginea8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginea8" kindref="member">ArtsEngine::isStream</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="334"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref><sp/>)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref>-&gt;stream();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="classArtsEngine_1ArtsEnginea9" refkind="member"><highlight class="normal">std::vector&lt;float&gt;*<sp/><ref refid="classArtsEngine_1ArtsEnginea9" kindref="member">ArtsEngine::scope</ref>()</highlight></codeline>
<codeline lineno="343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginer8" kindref="member">m_scope</ref>.<ref refid="classAmarok_1_1RawScope_1Amarok_1_1RawScopea18" kindref="member">scope</ref>();</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="classArtsEngine_1ArtsEnginei0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginei1" kindref="member">ArtsEngine::play</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KURL&amp;<sp/>url<sp/>)</highlight></codeline>
<codeline lineno="350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>kdDebug()<sp/>&lt;&lt;<sp/>k_funcinfo<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer14" kindref="member">m_xfadeFadeout</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEngined0" kindref="member">startXfade</ref>();</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>KDE::PlayObjectFactory<sp/>factory(<sp/><ref refid="classArtsEngine_1ArtsEnginer3" kindref="member">m_server</ref><sp/>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref><sp/>=<sp/>factory.createPlayObject(<sp/>url,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);<sp/></highlight><highlight class="comment">//second<sp/>parameter:<sp/>create<sp/>BUS(true/false)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref><sp/>||<sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref>-&gt;isNull()<sp/>)<sp/></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qWarning(</highlight><highlight class="stringliteral">&quot;Arts<sp/>Error<sp/>1----------------&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginek1" kindref="member">connectTimeout</ref>();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classEngineBase_1EngineBasel1" kindref="member">stopped</ref>();</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(<sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref>,<sp/>SIGNAL(<sp/>destroyed()<sp/>),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SIGNAL(<sp/><ref refid="classEngineBase_1EngineBasel1" kindref="member">stopped</ref>()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref>-&gt;object().isNull()<sp/>)<sp/></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kdDebug()<sp/>&lt;&lt;<sp/>k_funcinfo<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_pPlayObject-&gt;object().isNull()&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qWarning(</highlight><highlight class="stringliteral">&quot;Arts<sp/>Error<sp/>2----------------&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(<sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref>,<sp/>SIGNAL(<sp/>playObjectCreated()<sp/>),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(<sp/><ref refid="classArtsEngine_1ArtsEnginek0" kindref="member">connectPlayObject</ref>()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer18" kindref="member">m_pConnectTimer</ref>-&gt;start(<sp/><ref refid="classArtsEngine_1ArtsEnginev1" kindref="member">TIMEOUT</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginek0" kindref="member">connectPlayObject</ref>();</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qWarning(</highlight><highlight class="stringliteral">&quot;Arts<sp/>Connect&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginei1" kindref="member">play</ref>();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385" refid="classArtsEngine_1ArtsEnginek0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginek0" kindref="member">ArtsEngine::connectPlayObject</ref>()<sp/></highlight><highlight class="comment">//SLOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer18" kindref="member">m_pConnectTimer</ref>-&gt;stop();</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref><sp/>&amp;&amp;<sp/>!<ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref>-&gt;isNull()<sp/>&amp;&amp;<sp/>!<ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref>-&gt;object().isNull()<sp/>)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref>-&gt;object()._node()-&gt;start();</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//switch<sp/>xfade<sp/>channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer16" kindref="member">m_xfadeCurrent</ref><sp/>=<sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer16" kindref="member">m_xfadeCurrent</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;invalue1&quot;</highlight><highlight class="normal"><sp/>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;invalue2&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;invalue1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer15" kindref="member">m_xfadeValue</ref><sp/>==<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer15" kindref="member">m_xfadeValue</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arts::connect(<sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref>-&gt;object(),<sp/></highlight><highlight class="stringliteral">&quot;left&quot;</highlight><highlight class="normal">,<sp/><ref refid="classArtsEngine_1ArtsEnginer9" kindref="member">m_xfade</ref>,<sp/>(<sp/>m_xfadeCurrent<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_l&quot;</highlight><highlight class="normal"><sp/>).latin1()<sp/>);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arts::connect(<sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref>-&gt;object(),<sp/></highlight><highlight class="stringliteral">&quot;right&quot;</highlight><highlight class="normal">,<sp/><ref refid="classArtsEngine_1ArtsEnginer9" kindref="member">m_xfade</ref>,<sp/>(<sp/>m_xfadeCurrent<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_r&quot;</highlight><highlight class="normal"><sp/>).latin1()<sp/>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="comment">//SLOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="classArtsEngine_1ArtsEnginek1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginek1" kindref="member">ArtsEngine::connectTimeout</ref>()</highlight></codeline>
<codeline lineno="406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>kdWarning()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[ArtsEngine::connectTimeout()]<sp/>Cannot<sp/>initialize<sp/>PlayObject!<sp/>Skipping<sp/>this<sp/>track.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer18" kindref="member">m_pConnectTimer</ref>-&gt;stop();</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415" refid="classArtsEngine_1ArtsEnginei1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginei1" kindref="member">ArtsEngine::play</ref>()</highlight></codeline>
<codeline lineno="416"><highlight class="normal">{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref><sp/>)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qWarning(</highlight><highlight class="stringliteral">&quot;Arts<sp/>Play<sp/>files&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref>-&gt;play();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425" refid="classArtsEngine_1ArtsEnginei2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginei2" kindref="member">ArtsEngine::stop</ref>()</highlight></codeline>
<codeline lineno="426"><highlight class="normal">{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>kdDebug()<sp/>&lt;&lt;<sp/>k_funcinfo<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//switch<sp/>xfade<sp/>channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer16" kindref="member">m_xfadeCurrent</ref><sp/>=<sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer16" kindref="member">m_xfadeCurrent</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;invalue1&quot;</highlight><highlight class="normal"><sp/>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;invalue2&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;invalue1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer15" kindref="member">m_xfadeValue</ref><sp/>==<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer15" kindref="member">m_xfadeValue</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer14" kindref="member">m_xfadeFadeout</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEngined0" kindref="member">startXfade</ref>();</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440" refid="classArtsEngine_1ArtsEnginei3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginei3" kindref="member">ArtsEngine::pause</ref>()</highlight></codeline>
<codeline lineno="441"><highlight class="normal">{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref><sp/>)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref>-&gt;pause();</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449" refid="classArtsEngine_1ArtsEnginei4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginei4" kindref="member">ArtsEngine::seek</ref>(<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ms<sp/>)</highlight></codeline>
<codeline lineno="450"><highlight class="normal">{</highlight></codeline>
<codeline lineno="451"><highlight class="normal">kdDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;seek&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ms<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref><sp/>)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>kdDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;if<sp/>~~~seek&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ms<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arts::poTime<sp/>time;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time.ms<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ms<sp/>%<sp/>1000;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time.seconds<sp/>=<sp/>(<sp/>ms<sp/>-<sp/>time.ms<sp/>)<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time.custom<sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref>-&gt;seek(<sp/>time<sp/>);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464" refid="classArtsEngine_1ArtsEnginei5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginei5" kindref="member">ArtsEngine::setVolume</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>percent<sp/>)</highlight></codeline>
<codeline lineno="465"><highlight class="normal">{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>m_volume<sp/>=<sp/>percent;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer12" kindref="member">m_volumeId</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//using<sp/>a<sp/>logarithmic<sp/>function<sp/>to<sp/>make<sp/>the<sp/>volume<sp/>slider<sp/>more<sp/>natural</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer6" kindref="member">m_volumeControl</ref>.scaleFactor(<sp/>1.0<sp/>-<sp/>log10(<sp/>(<sp/>100<sp/>-<sp/>percent)<sp/>*<sp/>0.09<sp/>+<sp/>1.0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEngineBase_1EngineBaseb2" kindref="member">EngineBase::setVolumeHW</ref>(<sp/>percent<sp/>);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478" refid="classArtsEngine_1ArtsEnginea10" refkind="member"><highlight class="normal">QStringList<sp/><ref refid="classArtsEngine_1ArtsEnginea10" kindref="member">ArtsEngine::availableEffects</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="479"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>QStringList<sp/>val;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>Arts::TraderQuery<sp/>query;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>query.supports(<sp/></highlight><highlight class="stringliteral">&quot;Interface&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Arts::StereoEffect&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>query.supports(<sp/></highlight><highlight class="stringliteral">&quot;Interface&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Arts::SynthModule&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Arts::TraderOffer&gt;<sp/>*offers<sp/>=<sp/>query.query();</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;Arts::TraderOffer&gt;::iterator<sp/>i<sp/>=<sp/>offers-&gt;begin();<sp/>i<sp/>!=<sp/>offers-&gt;end();<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arts::TraderOffer<sp/>&amp;offer<sp/>=<sp/>*i;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>name<sp/>=<sp/>offer.interfaceName().c_str();</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val.append(<sp/>name<sp/>);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>offers;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498" refid="classArtsEngine_1ArtsEnginea11" refkind="member"><highlight class="normal">std::vector&lt;long&gt;<sp/><ref refid="classArtsEngine_1ArtsEnginea11" kindref="member">ArtsEngine::activeEffects</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="499"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;long&gt;<sp/>vec;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>QMap&lt;long,<sp/>EffectContainer&gt;::ConstIterator<sp/>it;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>it<sp/>=<sp/><ref refid="classArtsEngine_1ArtsEnginer13" kindref="member">m_effectMap</ref>.begin();<sp/>it<sp/>!=<sp/><ref refid="classArtsEngine_1ArtsEnginer13" kindref="member">m_effectMap</ref>.end();<sp/>++it<sp/>)</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec.push_back(<sp/>it.key()<sp/>);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vec;</highlight></codeline>
<codeline lineno="509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512" refid="classArtsEngine_1ArtsEnginea12" refkind="member"><highlight class="normal">QString<sp/><ref refid="classArtsEngine_1ArtsEnginea12" kindref="member">ArtsEngine::effectNameForId</ref>(<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="513"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>str<sp/>=<sp/>(*<ref refid="classArtsEngine_1ArtsEnginer13" kindref="member">m_effectMap</ref>[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">].effect)._interfaceName();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>qstr(<sp/>str.c_str()<sp/>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qstr;</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521" refid="classArtsEngine_1ArtsEnginea13" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginea13" kindref="member">ArtsEngine::effectConfigurable</ref>(<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="522"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer13" kindref="member">m_effectMap</ref>.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>==<sp/><ref refid="classArtsEngine_1ArtsEnginer13" kindref="member">m_effectMap</ref>.end()<sp/>)</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>Arts::TraderQuery<sp/>query;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>query.supports(<sp/></highlight><highlight class="stringliteral">&quot;Interface&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Arts::GuiFactory&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>query.supports(<sp/></highlight><highlight class="stringliteral">&quot;CanCreate&quot;</highlight><highlight class="normal">,<sp/>(*<ref refid="classArtsEngine_1ArtsEnginer13" kindref="member">m_effectMap</ref>[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">].effect)._interfaceName()<sp/>);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Arts::TraderOffer&gt;<sp/>*queryResults<sp/>=<sp/>query.query();</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>yes<sp/>=<sp/>queryResults-&gt;size();</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>queryResults;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yes;</highlight></codeline>
<codeline lineno="535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538" refid="classArtsEngine_1ArtsEnginea14" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginea14" kindref="member">ArtsEngine::createEffect</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;<sp/>name<sp/>)</highlight></codeline>
<codeline lineno="539"><highlight class="normal">{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>name.isEmpty()<sp/>)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>Arts::StereoEffect*<sp/>pFX<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Arts::StereoEffect;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>*pFX<sp/>=<sp/>Arts::DynamicCast(<sp/><ref refid="classArtsEngine_1ArtsEnginer3" kindref="member">m_server</ref>.createObject(<sp/>std::string(<sp/>name.ascii()<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(*pFX).isNull()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kdWarning()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[ArtsEngine::createEffect]<sp/>error:<sp/>could<sp/>not<sp/>create<sp/>effect.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pFX;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>pFX-&gt;start();</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="classArtsEngine_1ArtsEnginer5" kindref="member">m_effectStack</ref>.insertBottom(<sp/>*pFX,<sp/>std::string(<sp/>name.ascii()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kdWarning()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[ArtsEngine::createEffect]<sp/>error:<sp/>insertBottom<sp/>failed.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFX-&gt;stop();</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pFX;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structArtsEngine_1_1EffectContainer" kindref="compound">EffectContainer</ref><sp/>container;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>container.<ref refid="structArtsEngine_1_1EffectContainer_1ArtsEngine_1_1EffectContainero0" kindref="member">effect</ref><sp/>=<sp/>pFX;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>container.<ref refid="structArtsEngine_1_1EffectContainer_1ArtsEngine_1_1EffectContainero1" kindref="member">widget</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer13" kindref="member">m_effectMap</ref>.insert(<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>container<sp/>);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574" refid="classArtsEngine_1ArtsEnginea15" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginea15" kindref="member">ArtsEngine::removeEffect</ref>(<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="575"><highlight class="normal">{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer5" kindref="member">m_effectStack</ref>.remove(<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer13" kindref="member">m_effectMap</ref>[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">].effect-&gt;stop();</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginer13" kindref="member">m_effectMap</ref>[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">].widget;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginer13" kindref="member">m_effectMap</ref>[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">].effect;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer13" kindref="member">m_effectMap</ref>.remove(<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586" refid="classArtsEngine_1ArtsEnginea16" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginea16" kindref="member">ArtsEngine::configureEffect</ref>(<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="587"><highlight class="normal">{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<ref refid="classArtsEngine_1ArtsEnginer13" kindref="member">m_effectMap</ref>[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">].widget<sp/>)</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer13" kindref="member">m_effectMap</ref>[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">].widget<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1_1ArtsConfigWidget" kindref="compound">ArtsConfigWidget</ref>(<sp/>*<ref refid="classArtsEngine_1ArtsEnginer13" kindref="member">m_effectMap</ref>[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">].effect<sp/>);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer13" kindref="member">m_effectMap</ref>[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">].widget-&gt;show();</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596" refid="classArtsEngine_1ArtsEnginea17" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginea17" kindref="member">ArtsEngine::decoderConfigurable</ref>()</highlight></codeline>
<codeline lineno="597"><highlight class="normal">{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref><sp/>&amp;&amp;<sp/>!<ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref>-&gt;object().isNull()<sp/>&amp;&amp;<sp/>!<ref refid="classArtsEngine_1ArtsEnginer17" kindref="member">m_pDecoderConfigWidget</ref><sp/>)</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arts::TraderQuery<sp/>query;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>query.supports(<sp/></highlight><highlight class="stringliteral">&quot;Interface&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Arts::GuiFactory&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>query.supports(<sp/></highlight><highlight class="stringliteral">&quot;CanCreate&quot;</highlight><highlight class="normal">,<sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref>-&gt;object()._interfaceName()<sp/>);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Arts::TraderOffer&gt;<sp/>*queryResults<sp/>=<sp/>query.query();</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>yes<sp/>=<sp/>queryResults-&gt;size();</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>queryResults;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yes;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614" refid="classArtsEngine_1ArtsEnginei6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginei6" kindref="member">ArtsEngine::configureDecoder</ref>()<sp/></highlight><highlight class="comment">//slot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal">{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>method<sp/>shows<sp/>a<sp/>GUI<sp/>for<sp/>an<sp/>aRts<sp/>CODEC.<sp/>currently<sp/>only<sp/>working<sp/>with<sp/>markey&apos;s<sp/>modplug_artsplugin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref><sp/>&amp;&amp;<sp/>!<ref refid="classArtsEngine_1ArtsEnginer17" kindref="member">m_pDecoderConfigWidget</ref><sp/>)</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer17" kindref="member">m_pDecoderConfigWidget</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1_1ArtsConfigWidget" kindref="compound">ArtsConfigWidget</ref>(<sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref>-&gt;object()<sp/>);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(<sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref>,<sp/>SIGNAL(<sp/>destroyed()<sp/>),<sp/><ref refid="classArtsEngine_1ArtsEnginer17" kindref="member">m_pDecoderConfigWidget</ref>,<sp/>SLOT(<sp/>deleteLater()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer17" kindref="member">m_pDecoderConfigWidget</ref>-&gt;show();</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="comment">//<sp/>PRIVATE<sp/>METHODS</highlight></codeline>
<codeline lineno="631"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632" refid="classArtsEngine_1ArtsEngined0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEngined0" kindref="member">ArtsEngine::startXfade</ref>()</highlight></codeline>
<codeline lineno="633"><highlight class="normal">{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer2" kindref="member">m_pPlayObjectXfade</ref><sp/>)</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer2" kindref="member">m_pPlayObjectXfade</ref>-&gt;halt();</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginer2" kindref="member">m_pPlayObjectXfade</ref>;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer2" kindref="member">m_pPlayObjectXfade</ref><sp/>=<sp/><ref refid="classArtsEngine_1ArtsEnginer1" kindref="member">m_pPlayObject</ref>;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pPlayObject<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645" refid="classArtsEngine_1ArtsEngined1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEngined1" kindref="member">ArtsEngine::timerEvent</ref>(<sp/>QTimerEvent*<sp/>)</highlight></codeline>
<codeline lineno="646"><highlight class="normal">{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer15" kindref="member">m_xfadeValue</ref><sp/>&gt;<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer15" kindref="member">m_xfadeValue</ref><sp/>-=<sp/>(<sp/>m_xfadeLength<sp/>)<sp/>?<sp/><sp/>1.0<sp/>/<sp/>m_xfadeLength<sp/>*<sp/><ref refid="classArtsEngine_1ArtsEnginev0" kindref="member">ARTS_TIMER</ref><sp/>:<sp/>1.0;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer15" kindref="member">m_xfadeValue</ref><sp/>&lt;=<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer15" kindref="member">m_xfadeValue</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer2" kindref="member">m_pPlayObjectXfade</ref><sp/>)</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer2" kindref="member">m_pPlayObjectXfade</ref>-&gt;halt();</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEnginer2" kindref="member">m_pPlayObjectXfade</ref>;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer2" kindref="member">m_pPlayObjectXfade</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer14" kindref="member">m_xfadeFadeout</ref><sp/>)</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>1.0<sp/>-<sp/>log10(<sp/>(<sp/>1.0<sp/>-<sp/><ref refid="classArtsEngine_1ArtsEnginer15" kindref="member">m_xfadeValue</ref><sp/>)<sp/>*<sp/>9.0<sp/>+<sp/>1.0<sp/>);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>log10(<sp/><ref refid="classArtsEngine_1ArtsEnginer15" kindref="member">m_xfadeValue</ref><sp/>*<sp/>9.0<sp/>+<sp/>1.0<sp/>);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginer9" kindref="member">m_xfade</ref>.<ref refid="classAmarok_1_1Synth__STEREO__XFADE_1Amarok_1_1Synth__STEREO__XFADEa15" kindref="member">percentage</ref>(<sp/>(<sp/><ref refid="classArtsEngine_1ArtsEnginer16" kindref="member">m_xfadeCurrent</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;invalue2&quot;</highlight><highlight class="normal"><sp/>)<sp/>?<sp/>value<sp/>:<sp/>1.0<sp/>-<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672" refid="classArtsEngine_1ArtsEngined2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEngined2" kindref="member">ArtsEngine::loadEffects</ref>()</highlight></codeline>
<codeline lineno="673"><highlight class="normal">{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>kdDebug()<sp/>&lt;&lt;<sp/>k_funcinfo<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>QDomDocument<sp/>doc;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>kapp<sp/>);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>QFile<sp/>file(<sp/>kapp-&gt;dirs()-&gt;saveLocation(<sp/></highlight><highlight class="stringliteral">&quot;data&quot;</highlight><highlight class="normal">,<sp/>kapp-&gt;instanceName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;arts-effects.xml&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!file.open(<sp/>IO_ReadOnly<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kdWarning()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[ArtsEngine::loadEffects()]<sp/>error:<sp/>!file.open()&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>errorMsg;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>errorLine;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>errorColumn;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!doc.setContent(<sp/>&amp;file,<sp/>&amp;errorMsg,<sp/>&amp;errorLine,<sp/>&amp;errorColumn<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kdWarning()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[ArtsEngine::loadEffects()]<sp/>error:<sp/>!doc.setContent()&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kdWarning()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[ArtsEngine::loadEffects()]<sp/>errorMsg<sp/><sp/><sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>errorMsg<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kdWarning()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[ArtsEngine::loadEffects()]<sp/>errorLine<sp/><sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>errorLine<sp/><sp/><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kdWarning()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[ArtsEngine::loadEffects()]<sp/>errorColumn:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>errorColumn<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file.close();</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>QDomElement<sp/>docElem<sp/>=<sp/>doc.documentElement();</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>QDomNode<sp/>n<sp/>=<sp/>docElem.firstChild();<sp/>!n.isNull();<sp/>n<sp/>=<sp/>n.nextSibling()<sp/>)</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>effect<sp/>=<sp/>n.namedItem(<sp/></highlight><highlight class="stringliteral">&quot;effectname&quot;</highlight><highlight class="normal"><sp/>).firstChild().toText().nodeValue();</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kdDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;effectname:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>effect<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="classArtsEngine_1ArtsEnginea14" kindref="member">createEffect</ref>(<sp/>effect<sp/>);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>QDomNode<sp/>nAttr<sp/>=<sp/>n.firstChild();<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!nAttr.isNull();<sp/>nAttr<sp/>=<sp/>nAttr.nextSibling()<sp/>)</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>nAttr.nodeName()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;attribute&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>name<sp/><sp/>=<sp/>nAttr.namedItem(<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal"><sp/><sp/>).firstChild().toText().nodeValue();</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>type<sp/><sp/>=<sp/>nAttr.namedItem(<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal"><sp/><sp/>).firstChild().toText().nodeValue();</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>value<sp/>=<sp/>nAttr.namedItem(<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal"><sp/>).firstChild().toText().nodeValue();</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kdDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;name<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name<sp/><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kdDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;type<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>type<sp/><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kdDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;value:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>value<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arts::DynamicRequest<sp/>req(<sp/>*<ref refid="classArtsEngine_1ArtsEnginer13" kindref="member">m_effectMap</ref>[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">].effect<sp/>);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>set(<sp/></highlight><highlight class="stringliteral">&quot;_set_&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set.append(<sp/>std::string(<sp/>name.latin1()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req.method(<sp/>set<sp/>);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arts::Buffer<sp/>buf;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf.fromString(<sp/>std::string(<sp/>value.latin1()<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arts::Any<sp/>param;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param.type<sp/>=<sp/>std::string(<sp/>type.latin1()<sp/>);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param.readType(<sp/>buf<sp/>);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req.param(<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!req.invoke()<sp/>)</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kdWarning()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DynamicRequest<sp/>failed.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal">}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740" refid="classArtsEngine_1ArtsEngined3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1ArtsEngined3" kindref="member">ArtsEngine::saveEffects</ref>()</highlight></codeline>
<codeline lineno="741"><highlight class="normal">{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>QDomDocument<sp/>doc;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>QDomElement<sp/>root<sp/>=<sp/>doc.createElement(<sp/></highlight><highlight class="stringliteral">&quot;aRts-Effects&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>doc.appendChild(<sp/>root<sp/>);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>QMap&lt;long,<sp/>EffectContainer&gt;::Iterator<sp/>it<sp/>=<sp/><ref refid="classArtsEngine_1ArtsEnginer13" kindref="member">m_effectMap</ref>.begin();<sp/>it<sp/>!=<sp/><ref refid="classArtsEngine_1ArtsEnginer13" kindref="member">m_effectMap</ref>.end();<sp/>++it<sp/>)</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QDomElement<sp/>tagEffect<sp/>=<sp/>doc.createElement(<sp/></highlight><highlight class="stringliteral">&quot;effect&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root.appendChild(<sp/>tagEffect<sp/>);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//effectname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QDomElement<sp/>tag<sp/>=<sp/>doc.createElement(<sp/></highlight><highlight class="stringliteral">&quot;effectname&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tagEffect.appendChild(<sp/>tag<sp/>);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QDomText<sp/>txt<sp/>=<sp/>doc.createTextNode(<sp/>(*it.data().effect)._interfaceName().c_str()<sp/>);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tag.appendChild(<sp/>txt<sp/>);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arts::InterfaceDef<sp/>def<sp/>=<sp/>(*it.data().effect)._queryInterface(<sp/>(*it.data().effect)._interfaceName()<sp/>);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>uint<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>def.attributes.size();<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QDomElement<sp/>tagAttribute<sp/>=<sp/>doc.createElement(<sp/></highlight><highlight class="stringliteral">&quot;attribute&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tagEffect.appendChild(<sp/>tagAttribute<sp/>);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QDomElement<sp/>tag<sp/>=<sp/>doc.createElement(<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tagAttribute.appendChild(<sp/>tag<sp/>);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QDomText<sp/>txt<sp/>=<sp/>doc.createTextNode(<sp/>def.attributes[i].name.c_str()<sp/>);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tag.appendChild(<sp/>txt<sp/>);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arts::DynamicRequest<sp/>req(<sp/>*it.data().effect<sp/>);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req.method(<sp/></highlight><highlight class="stringliteral">&quot;_get_&quot;</highlight><highlight class="normal"><sp/>+<sp/>def.attributes[i].name<sp/>);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arts::Any<sp/>result;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.type<sp/>=<sp/>def.attributes[i].type;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QDomElement<sp/>tag<sp/>=<sp/>doc.createElement(<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tagAttribute.appendChild(<sp/>tag<sp/>);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QDomText<sp/>txt<sp/>=<sp/>doc.createTextNode(<sp/>def.attributes[i].type.c_str()<sp/>);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tag.appendChild(<sp/>txt<sp/>);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!req.invoke(<sp/>result<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kdWarning()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;request<sp/>failed.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arts::Buffer<sp/>buf;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.writeType(<sp/>buf<sp/>);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QDomElement<sp/>tag<sp/>=<sp/>doc.createElement(<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tagAttribute.appendChild(<sp/>tag<sp/>);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QDomText<sp/>txt<sp/>=<sp/>doc.createTextNode(<sp/>buf.toString(<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>).c_str()<sp/>);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tag.appendChild(<sp/>txt<sp/>);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1ArtsEnginea15" kindref="member">removeEffect</ref>(<sp/>it.key()<sp/>);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>kapp<sp/>);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>path<sp/>=<sp/>kapp-&gt;dirs()-&gt;saveLocation(<sp/></highlight><highlight class="stringliteral">&quot;data&quot;</highlight><highlight class="normal">,<sp/>kapp-&gt;instanceName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;arts-effects.xml&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>QFile::remove(<sp/>path<sp/>);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>QFile<sp/>file(<sp/>path<sp/>);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>file.open(<sp/>IO_ReadWrite<sp/>);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>QTextStream<sp/>stream(<sp/>&amp;file<sp/>);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>doc;</highlight></codeline>
<codeline lineno="807"><highlight class="normal">}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CLASS<sp/>EffectConfigWidget<sp/>--------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812" refid="classArtsEngine_1_1ArtsConfigWidget_1ArtsEngine_1_1ArtsConfigWidgeta0" refkind="member"><highlight class="normal"><ref refid="classArtsEngine_1_1ArtsConfigWidget_1ArtsEngine_1_1ArtsConfigWidgeta0" kindref="member">ArtsEngine::ArtsConfigWidget::ArtsConfigWidget</ref>(<sp/>Arts::Object<sp/>object<sp/>)</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classQWidget" kindref="compound">QWidget</ref>(<sp/>0,<sp/>0,<sp/>Qt::WType_TopLevel<sp/>|<sp/>Qt::WDestructiveClose<sp/>)</highlight></codeline>
<codeline lineno="814"><highlight class="normal">{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>kapp<sp/>);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>setCaption(<sp/>kapp-&gt;makeStdCaption(<sp/>QString(<sp/>object._interfaceName().c_str()<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>Arts::GenericGuiFactory<sp/>factory;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1_1ArtsConfigWidget_1ArtsEngine_1_1ArtsConfigWidgetr0" kindref="member">m_gui</ref><sp/>=<sp/>factory.createGui(<sp/>object<sp/>);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classArtsEngine_1_1ArtsConfigWidget_1ArtsEngine_1_1ArtsConfigWidgetr0" kindref="member">m_gui</ref>.isNull()<sp/>)</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kdWarning()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Arts::Widget<sp/>gui<sp/>==<sp/>NULL!<sp/>Returning..&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1_1ArtsConfigWidget_1ArtsEngine_1_1ArtsConfigWidgetr1" kindref="member">m_pArtsWidget</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KArtsWidget(<sp/><ref refid="classArtsEngine_1_1ArtsConfigWidget_1ArtsEngine_1_1ArtsConfigWidgetr0" kindref="member">m_gui</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QBoxLayout<sp/>*lay<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QHBoxLayout(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay-&gt;add(<sp/><ref refid="classArtsEngine_1_1ArtsConfigWidget_1ArtsEngine_1_1ArtsConfigWidgetr1" kindref="member">m_pArtsWidget</ref><sp/>);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837" refid="classArtsEngine_1_1ArtsConfigWidget_1ArtsEngine_1_1ArtsConfigWidgeta1" refkind="member"><highlight class="normal"><ref refid="classArtsEngine_1_1ArtsConfigWidget_1ArtsEngine_1_1ArtsConfigWidgeta1" kindref="member">ArtsEngine::ArtsConfigWidget::~ArtsConfigWidget</ref>()</highlight></codeline>
<codeline lineno="838"><highlight class="normal">{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classArtsEngine_1_1ArtsConfigWidget_1ArtsEngine_1_1ArtsConfigWidgetr1" kindref="member">m_pArtsWidget</ref>;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classArtsEngine_1_1ArtsConfigWidget_1ArtsEngine_1_1ArtsConfigWidgetr0" kindref="member">m_gui</ref><sp/>=<sp/>Arts::Widget::null();</highlight></codeline>
<codeline lineno="841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="artsengine_8moc" kindref="compound">artsengine.moc</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/root/kde_application/hdass08/src/artsengine.cpp"/>
  </compounddef>
</doxygen>
