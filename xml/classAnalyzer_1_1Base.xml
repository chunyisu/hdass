<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.3.6">
  <compounddef id="classAnalyzer_1_1Base" kind="class" prot="public">
    <compoundname>Analyzer::Base</compoundname>
    <includes refid="analyzerbase_8h" local="no">analyzerbase.h</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>W</declname>
        <defname>W</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classAnalyzer_1_1Base_1Analyzer_1_1Basea0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint</type>
        <definition>uint Analyzer::Base&lt; W &gt;::timeout</definition>
        <argsstring>() const </argsstring>
        <name>timeout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/kde_application/hdass08/src/analyzerbase.h" line="42" bodystart="42" bodyend="42"/>
        <referencedby refid="classAnalyzer_1_1Base_1Analyzer_1_1Based0" compoundref="analyzerbase_8cpp" startline="51" endline="71">Analyzer::Base&lt; W &gt;::event</referencedby>
      </memberdef>
      <memberdef kind="function" id="classAnalyzer_1_1Base_1Analyzer_1_1Basea1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint</type>
        <definition>uint Analyzer::Base&lt; W &gt;::height</definition>
        <argsstring>() const </argsstring>
        <name>height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/kde_application/hdass08/src/analyzerbase.h" line="43" bodystart="43" bodyend="43"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classAnalyzer_1_1Base_1Analyzer_1_1Baseb0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Analyzer::Base&lt; W &gt;::Base</definition>
        <argsstring>(QWidget *, uint, uint=7)</argsstring>
        <name>Base</name>
        <param>
          <type><ref refid="classQWidget" kindref="compound">QWidget</ref> *</type>
          <defname>parent</defname>
        </param>
        <param>
          <type>uint</type>
          <defname>timeout</defname>
        </param>
        <param>
          <type>uint</type>
          <defname>scopeSize</defname>
          <defval>7</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/kde_application/hdass08/src/analyzerbase.h" line="46" bodystart="43" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classAnalyzer_1_1Base_1Analyzer_1_1Baseb1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Analyzer::Base&lt; W &gt;::drawFrame</definition>
        <argsstring>()</argsstring>
        <name>drawFrame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/kde_application/hdass08/src/analyzerbase.h" line="48" bodystart="94" bodyend="121"/>
        <references refid="classAnalyzer_1_1Base_1Analyzer_1_1Baseb3">Analyzer::Base&lt; W &gt;::analyze</references>
        <references refid="classAnalyzer_1_1Base_1Analyzer_1_1Baseb5" compoundref="analyzerbase_8cpp" startline="128" endline="146">Analyzer::Base&lt; W &gt;::demo</references>
        <references refid="classEngineController_1EngineControllere1" compoundref="enginecontroller_8h" startline="43" endline="43">EngineController::engine</references>
        <references refid="classAnalyzer_1_1Base_1Analyzer_1_1Baseb4" compoundref="analyzerbase_8cpp" startline="124" endline="125">Analyzer::Base&lt; W &gt;::paused</references>
        <references refid="classEngineBase_1EngineBasea14" compoundref="enginebase_8h" startline="99" endline="99">EngineBase::scope</references>
        <references refid="namespaceAnalyzer_1a0" compoundref="analyzerbase_8h" startline="33">Analyzer::Scope</references>
        <references refid="classEngineBase_1EngineBasea8">EngineBase::state</references>
        <references refid="classAnalyzer_1_1Base_1Analyzer_1_1Baseb2" compoundref="analyzerbase_8cpp" startline="74" endline="91">Analyzer::Base&lt; W &gt;::transform</references>
      </memberdef>
      <memberdef kind="function" id="classAnalyzer_1_1Base_1Analyzer_1_1Baseb2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>virtual void</type>
        <definition>void Analyzer::Base&lt; W &gt;::transform</definition>
        <argsstring>(Scope &amp;)</argsstring>
        <name>transform</name>
        <reimplementedby refid="classSonogram_1Sonograma4">transform</reimplementedby>
        <param>
          <type><ref refid="namespaceAnalyzer_1a0" kindref="member">Scope</ref> &amp;</type>
          <defname>scope</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/kde_application/hdass08/src/analyzerbase.h" line="49" bodystart="74" bodyend="91"/>
        <references refid="classFHT_1FHTa4" compoundref="fht_8cpp" startline="70" endline="73">FHT::copy</references>
        <references refid="classFHT_1FHTa9" compoundref="fht_8cpp" startline="116" endline="140">FHT::logSpectrum</references>
        <references refid="classAnalyzer_1_1Base_1Analyzer_1_1Basep3" compoundref="analyzerbase_8h" startline="67">Analyzer::Base&lt; W &gt;::m_fht</references>
        <references refid="classFHT_1FHTa6" compoundref="fht_8cpp" startline="82" endline="86">FHT::scale</references>
        <references refid="namespaceAnalyzer_1a0" compoundref="analyzerbase_8h" startline="33">Analyzer::Scope</references>
        <references refid="classFHT_1FHTa3" compoundref="fht_8h" startline="62" endline="62">FHT::size</references>
        <referencedby refid="classAnalyzer_1_1Base_1Analyzer_1_1Baseb1" compoundref="analyzerbase_8cpp" startline="94" endline="121">Analyzer::Base&lt; W &gt;::drawFrame</referencedby>
      </memberdef>
      <memberdef kind="function" id="classAnalyzer_1_1Base_1Analyzer_1_1Baseb3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>virtual void</type>
        <definition>virtual void Analyzer::Base&lt; W &gt;::analyze</definition>
        <argsstring>(const Scope &amp;)=0</argsstring>
        <name>analyze</name>
        <reimplementedby refid="classSonogram_1Sonograma3">analyze</reimplementedby>
        <param>
          <type>const <ref refid="namespaceAnalyzer_1a0" kindref="member">Scope</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/kde_application/hdass08/src/analyzerbase.h" line="50"/>
        <referencedby refid="classAnalyzer_1_1Base_1Analyzer_1_1Baseb5" compoundref="analyzerbase_8cpp" startline="128" endline="146">Analyzer::Base&lt; W &gt;::demo</referencedby>
        <referencedby refid="classAnalyzer_1_1Base_1Analyzer_1_1Baseb1" compoundref="analyzerbase_8cpp" startline="94" endline="121">Analyzer::Base&lt; W &gt;::drawFrame</referencedby>
      </memberdef>
      <memberdef kind="function" id="classAnalyzer_1_1Base_1Analyzer_1_1Baseb4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>virtual void</type>
        <definition>void Analyzer::Base&lt; W &gt;::paused</definition>
        <argsstring>()</argsstring>
        <name>paused</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/kde_application/hdass08/src/analyzerbase.h" line="51" bodystart="124" bodyend="125"/>
        <referencedby refid="classAnalyzer_1_1Base_1Analyzer_1_1Baseb1" compoundref="analyzerbase_8cpp" startline="94" endline="121">Analyzer::Base&lt; W &gt;::drawFrame</referencedby>
      </memberdef>
      <memberdef kind="function" id="classAnalyzer_1_1Base_1Analyzer_1_1Baseb5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>virtual void</type>
        <definition>void Analyzer::Base&lt; W &gt;::demo</definition>
        <argsstring>()</argsstring>
        <name>demo</name>
        <reimplementedby refid="classSonogram_1Sonograma5">demo</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/kde_application/hdass08/src/analyzerbase.h" line="52" bodystart="128" bodyend="146"/>
        <references refid="classAnalyzer_1_1Base_1Analyzer_1_1Baseb3">Analyzer::Base&lt; W &gt;::analyze</references>
        <references refid="namespaceAnalyzer_1a0" compoundref="analyzerbase_8h" startline="33">Analyzer::Scope</references>
        <referencedby refid="classAnalyzer_1_1Base_1Analyzer_1_1Baseb1" compoundref="analyzerbase_8cpp" startline="94" endline="121">Analyzer::Base&lt; W &gt;::drawFrame</referencedby>
      </memberdef>
      <memberdef kind="function" id="classAnalyzer_1_1Base_1Analyzer_1_1Baseb6" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Analyzer::Base&lt; W &gt;::changeTimeout</definition>
        <argsstring>(uint newTimeout)</argsstring>
        <name>changeTimeout</name>
        <param>
          <type>uint</type>
          <declname>newTimeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/kde_application/hdass08/src/analyzerbase.h" line="55" bodystart="54" bodyend="58"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classAnalyzer_1_1Base_1Analyzer_1_1Basep0" prot="protected" static="no" volatile="no" mutable="no">
        <type>QTimer</type>
        <definition>QTimer Analyzer::Base&lt; W &gt;::m_timer</definition>
        <argsstring></argsstring>
        <name>m_timer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/kde_application/hdass08/src/analyzerbase.h" line="64" bodystart="64" bodyend="-1"/>
        <referencedby refid="classAnalyzer_1_1Base_1Analyzer_1_1Based0" compoundref="analyzerbase_8cpp" startline="51" endline="71">Analyzer::Base&lt; W &gt;::event</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classAnalyzer_1_1Base_1Analyzer_1_1Basep1" prot="protected" static="no" volatile="no" mutable="no">
        <type>uint</type>
        <definition>uint Analyzer::Base&lt; W &gt;::m_timeout</definition>
        <argsstring></argsstring>
        <name>m_timeout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/kde_application/hdass08/src/analyzerbase.h" line="65" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAnalyzer_1_1Base_1Analyzer_1_1Basep2" prot="protected" static="no" volatile="no" mutable="no">
        <type>uint</type>
        <definition>uint Analyzer::Base&lt; W &gt;::m_height</definition>
        <argsstring></argsstring>
        <name>m_height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/kde_application/hdass08/src/analyzerbase.h" line="66" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAnalyzer_1_1Base_1Analyzer_1_1Basep3" prot="protected" static="no" volatile="no" mutable="no">
        <type><ref refid="classFHT" kindref="compound">FHT</ref></type>
        <definition>FHT Analyzer::Base&lt; W &gt;::m_fht</definition>
        <argsstring></argsstring>
        <name>m_fht</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/kde_application/hdass08/src/analyzerbase.h" line="67" bodystart="67" bodyend="-1"/>
        <referencedby refid="classAnalyzer_1_1Base_1Analyzer_1_1Baseb2" compoundref="analyzerbase_8cpp" startline="74" endline="91">Analyzer::Base&lt; W &gt;::transform</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classAnalyzer_1_1Base_1Analyzer_1_1Based0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Analyzer::Base&lt; W &gt;::event</definition>
        <argsstring>(QEvent *)</argsstring>
        <name>event</name>
        <param>
          <type>QEvent *</type>
          <defname>e</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/kde_application/hdass08/src/analyzerbase.h" line="61" bodystart="51" bodyend="71"/>
        <references refid="classAnalyzer_1_1Base_1Analyzer_1_1Basep0" compoundref="analyzerbase_8h" startline="64">Analyzer::Base&lt; W &gt;::m_timer</references>
        <references refid="classAnalyzer_1_1Base_1Analyzer_1_1Basea0" compoundref="analyzerbase_8h" startline="42" endline="42">Analyzer::Base&lt; W &gt;::timeout</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="334">
        <label>Analyzer::Base&lt; QWidget &gt;</label>
        <link refid="classAnalyzer_1_1Base"/>
        <childnode refid="333" relation="template-instance">
          <edgelabel>&lt; QWidget &gt;</edgelabel>
        </childnode>
      </node>
      <node id="338">
        <label>Analyzer::Base3D</label>
        <link refid="classAnalyzer_1_1Base3D"/>
        <childnode refid="337" relation="public-inheritance">
        </childnode>
      </node>
      <node id="335">
        <label>Analyzer::Base2D</label>
        <link refid="classAnalyzer_1_1Base2D"/>
        <childnode refid="334" relation="public-inheritance">
        </childnode>
      </node>
      <node id="337">
        <label>Analyzer::Base&lt; QGLWidget &gt;</label>
        <link refid="classAnalyzer_1_1Base"/>
        <childnode refid="333" relation="template-instance">
          <edgelabel>&lt; QGLWidget &gt;</edgelabel>
        </childnode>
      </node>
      <node id="336">
        <label>Sonogram</label>
        <link refid="classSonogram"/>
        <childnode refid="335" relation="public-inheritance">
        </childnode>
      </node>
      <node id="333">
        <label>Analyzer::Base&lt; W &gt;</label>
        <link refid="classAnalyzer_1_1Base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="340">
        <label>FHT</label>
        <link refid="classFHT"/>
      </node>
      <node id="339">
        <label>Analyzer::Base&lt; W &gt;</label>
        <link refid="classAnalyzer_1_1Base"/>
        <childnode refid="340" relation="usage">
          <edgelabel>m_fht</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/root/kde_application/hdass08/src/analyzerbase.h" line="40" bodystart="39" bodyend="68"/>
    <listofallmembers>
      <member refid="classAnalyzer_1_1Base_1Analyzer_1_1Baseb3" prot="protected" virt="pure-virtual"><scope>Analyzer::Base</scope><name>analyze</name></member>
      <member refid="classAnalyzer_1_1Base_1Analyzer_1_1Baseb0" prot="protected" virt="non-virtual"><scope>Analyzer::Base</scope><name>Base</name></member>
      <member refid="classAnalyzer_1_1Base_1Analyzer_1_1Baseb6" prot="protected" virt="non-virtual"><scope>Analyzer::Base</scope><name>changeTimeout</name></member>
      <member refid="classAnalyzer_1_1Base_1Analyzer_1_1Baseb5" prot="protected" virt="virtual"><scope>Analyzer::Base</scope><name>demo</name></member>
      <member refid="classAnalyzer_1_1Base_1Analyzer_1_1Baseb1" prot="protected" virt="non-virtual"><scope>Analyzer::Base</scope><name>drawFrame</name></member>
      <member refid="classAnalyzer_1_1Base_1Analyzer_1_1Based0" prot="private" virt="non-virtual"><scope>Analyzer::Base</scope><name>event</name></member>
      <member refid="classAnalyzer_1_1Base_1Analyzer_1_1Basea1" prot="public" virt="non-virtual"><scope>Analyzer::Base</scope><name>height</name></member>
      <member refid="classAnalyzer_1_1Base_1Analyzer_1_1Basep3" prot="protected" virt="non-virtual"><scope>Analyzer::Base</scope><name>m_fht</name></member>
      <member refid="classAnalyzer_1_1Base_1Analyzer_1_1Basep2" prot="protected" virt="non-virtual"><scope>Analyzer::Base</scope><name>m_height</name></member>
      <member refid="classAnalyzer_1_1Base_1Analyzer_1_1Basep1" prot="protected" virt="non-virtual"><scope>Analyzer::Base</scope><name>m_timeout</name></member>
      <member refid="classAnalyzer_1_1Base_1Analyzer_1_1Basep0" prot="protected" virt="non-virtual"><scope>Analyzer::Base</scope><name>m_timer</name></member>
      <member refid="classAnalyzer_1_1Base_1Analyzer_1_1Baseb4" prot="protected" virt="virtual"><scope>Analyzer::Base</scope><name>paused</name></member>
      <member refid="classAnalyzer_1_1Base_1Analyzer_1_1Basea0" prot="public" virt="non-virtual"><scope>Analyzer::Base</scope><name>timeout</name></member>
      <member refid="classAnalyzer_1_1Base_1Analyzer_1_1Baseb2" prot="protected" virt="virtual"><scope>Analyzer::Base</scope><name>transform</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
